{"version":3,"sources":["components/Header/Header.styles.js","constants/index.js","constants/collectionConstants.js","actions/collectionActions.js","components/Header/Header.js","globalStyles.js","config/config.js","components/SingleContent/SingleContent.styles.js","hooks/useSlug.js","hooks/useCovertDate.js","components/SingleContent/SingleContent.js","components/Pagination/CustomPagination.styles.js","components/Pagination/CustomPagination.js","constants/trendingConstants.js","actions/trendingActions.js","components/Error/Error.styles.js","components/Error/Error.js","pages/Trending/Trending.js","constants/tvSeriesConstants.js","actions/tvSeriesActions.js","constants/moviesConstants.js","actions/moviesActions.js","components/Genres/Genres.styles.js","components/Genres/Genres.js","hooks/useGenre.js","pages/Series/Series.js","components/SearchControl/SearchControl.js","constants/searchConstants.js","actions/searchActions.js","pages/Search/Search.js","pages/Movies/Movies.js","constants/watchConstants.js","actions/watchActions.js","components/Watch/Cast/Cast.styles.js","components/Watch/Cast/Cast.js","components/Avatar/Avatar.styles.js","components/Avatar/Avatar.js","components/Watch/WatchControls/WatchControl.styles.js","components/Watch/WatchControls/WatchControls.js","pages/Watch/Watch.styles.js","components/Watch/ModalTrailer/ModalTrailer.styles.js","components/Watch/ModalTrailer/ModalTrailer.js","components/Watch/Trailer/Trailer.styles.js","components/Watch/Trailer/Trailer.js","components/Watch/Play/Play.styles.js","components/Watch/Play/Play.js","components/Watch/Comment/Comment.styles.js","components/Watch/Comment/Comment.js","pages/Watch/Watch.js","pages/CastList/CastList.js","constants/actorConstants.js","components/Actor/ActorDetail/ActorDetail.styles.js","components/Actor/ActorDetail/ActorDetail.js","components/Actor/MovieCredits/MovieCredits.styles.js","components/Actor/MovieCredits/MovieCredits.js","pages/Actor/Actor.js","actions/actorActions.js","pages/Collection/Collection.js","routes/index.js","reducers/trendingReducer.js","reducers/moviesReducer.js","constants/uiConstants.js","reducers/uiReducer.js","reducers/tvSeriesReducer.js","constants/genresConstants.js","reducers/genresReducer.js","reducers/searchReducer.js","reducers/watchReducer.js","reducers/actorReducer.js","reducers/collectionReducer.js","reducers/index.js","actions/uiActions.js","commons/axiosServices.js","apis/genresApi.js","apis/moviesAPI.js","apis/searchApi.js","apis/trendingAPI.js","apis/tvSeriesApi.js","apis/actorApi.js","apis/watchApi.js","saga/index.js","redux/configureStore.js","components/GlobalLoading/GlobalLoading.styles.js","assets/images/loading.svg","components/GlobalLoading/GlobalLoading.js","components/Footer/Footer.styles.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["YELLOW","NavBar","styled","div","NavBarContent","NavBarBrand","Link","Logo","p","color","Menu","ul","MenuItem","li","MenuLink","NavLink","LeftMenu","LeftMenuItem","MESSAGES","NAV_LINKS","id","exact","path","name","ADD_COLLECTION","DELETE_COLLECTION","addCollection","data","type","collectionConstants","payload","Header","collection","useSelector","state","collections","collectionData","dispatch","useDispatch","useEffect","localStorage","getItem","collectionActions","JSON","parse","to","onClick","window","scroll","menuItems","map","item","activeClassName","renderMenu","Badge","badgeContent","length","GlobalStyle","createGlobalStyle","AppContainer","Title","Content","img_300","unavailable","noPicture","GRAY","ItemWrapper","Item","media_type","ItemMedia","img","ItemContent","ItemTitle","h1","ItemName","b","ItemBottom","span","ItemPopularity","ItemDate","ItemButtonDelete","toSlug","str","toLowerCase","normalize","replace","convertDate","date","split","reverse","join","SingleContent","deleteCollection","poster_path","title","vote_average","popularity","release_date","first_air_date","mainName","useSlug","mediaType","onHandleDelete","src","numberOfStars","starRatedColor","rating","starDimension","starSpacing","style","marginRight","fontSize","useConvertDate","CustomPagi","darkTheme","createTheme","palette","CustomPagination","setPage","numberOfPages","currentPage","ThemeProvider","theme","Pagination","count","page","parseInt","shape","size","onChange","e","pageSelected","target","textContent","handlePageChange","hidePrevButton","hideNextButton","FECTH_TRENDING","FECTH_TRENDING_SUCCESS","FECTH_TRENDING_FAILED","SET_TRENDING_CURRENT_PAGE","fecthTrending","params","trendingConstants","ErrorContainer","ErrorContent","ErrorTitle","ErrorDesc","Error","errorMessage","Trending","listTrending","trending","totalPages","error","trendingActions","number","FETCH_TVSERIES","FETCH_TVSERIES_SUCCESS","FETCH_TVSERIES_FAILED","SET_TVSERIES_CURRENT_PAGE","FETCH_TVSERIES_GENRES","FETCH_TVSERIES_GENRES_SUCCESS","FETCH_TVSERIES_GENRES_FAILED","SET_TVSERIES_SELECTED_GENRES","SET_TVSERIES_SELECTED_GENRES_ID","UPDATE_TVSERIES_GENRES","fetchTvSeries","tvSeriesTypes","setTvSeriesSelectedGenres","genres","FETCH_MOVIES","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILED","SET_CURRENT_PAGE_MOVIES","FETCH_MOVIES_GENRES","FETCH_MOVIES_GENRES_SUCCESS","FETCH_MOVIES_GENRES_FAILED","SET_MOVIES_SELECTED_GENRES","SET_MOVIES_SELECTED_GENRES_ID","UPDATE_MOVIES_GENRES","fetchMovies","moviesConstants","GenresContainer","GenresTitle","ChipElement","Chip","ErrorMessage","Genres","selectedGenres","setSelectedGenres","updateGenres","tvSeriesActions","moviesActions","xhtml","genre","label","clickable","onDelete","handleRemove","renderGenresSelected","handleAdd","renderGenres","useGenres","g","reduce","acc","curr","Series","listTvSeries","tvSeries","listSelectedGenres","listGenres","tvSeriesError","fetchTvSeriesError","genresError","fetchGenreError","genreforURL","SearchControl","searchChange","txtSearchRef","useRef","FormControl","fullWidth","TextField","marginBottom","inputProps","min","textAlign","paddingBottom","placeholder","variant","value","current","clearTimeout","setTimeout","txtSearch","onInputChange","margin","InputLabelProps","shrink","defaultProps","onSearchChange","SET_KEYWORD","SET_TYPE","FETCH_SEARCH","FETCH_SEARCH_SUCCESS","FETCH_SEARCH_FAILED","SET_CURRENT_PAGE_SEARCH","fetchSearch","searchConstants","primary","main","Search","search","keyword","listDataSearch","listData","message","searchActions","Tabs","event","newValue","indicatorColor","textColor","centered","aria-label","Tab","Movies","listMovies","movies","genreErrorMessage","setCurrentPage","FETCH_INFO","FETCH_INFO_SUCCESS","FETCH_INFO_FAILED","FETCH_CAST","FETCH_CAST_SUCCESS","FETCH_CAST_FAILED","fetchInfo","watchConstants","CastWrapper","CastHeader","CastContent","CastItem","CastItemImg","CastImg","CastItemName","MoreCast","handleDragStart","preventDefault","Cast","match","showAllCast","castData","watch","watchActions","url","items","c","profile_path","alt","onDragStart","index","renderCast","AvatarContainer","Poster","PosterItemContainer","PosterItem","props","Active","css","PosterItemImg","Avatar","imagePath","imageTitle","ActorID","useState","setUrl","images","setImages","getImages","a","process","fetch","response","json","profiles","image","file_path","posterUrl","WatchControl","Button","WatchControls","playMovie","keyList","collected","setCollected","onAddCollection","newCollection","currentMovie","push","setItem","stringify","href","filter","x","renderButtonAddCollection","MovieTitle","OriginalTitle","h3","VoteAverage","VoteCount","Overview","MoreInfo","InfoItem","ModalWrapper","ModalContainer","ModalContent","ModalHeader","CloseModal","CloseIcon","ModalTrailer","setVideoKey","videoKey","onCloseModal","frameBorder","allow","allowFullScreen","TrailerContainer","CarouselItem","Trailer","trailers","setTrailers","getTrailer","axios","get","results","dots","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","pauseOnHover","autoplay","autoplaySpeed","responsive","breakpoint","settings","arrows","video","key","Iframe","iframe","InfoRow","InfoName","h2","Color","Play","trailer","nameList","Grid","container","spacing","md","xs","width","height","CommentWrapper","CommentContent","Info","Time","CommentControl","form","CommentInput","textarea","Control","button","Comment","currentComment","setCurrentComment","commentList","setCommentList","onSubmit","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","dateFormat","comment","uuidv4","idMovie","content","time","newComment","onSubmitForm","commentOfMovie","renderComment","Watch","useParams","slice","setPlayMovie","setTrailer","infoData","trailerList","cursor","original_title","tagline","vote_count","overview","number_of_episodes","number_of_seasons","runtime","Math","floor","episode_run_time","created_by","production_countries","sm","CastList","FETCH_ACTOR_INFO","FETCH_ACTOR_INFO_SUCCESS","ActorName","Biography","ActorInfo","ActorInfoItem","ActorDetail","ActorData","gender","birthday","deathday","also_known_as","lenght","place_of_birth","biography","showAll","ButtonShowAll","MovieCredits","credits","setCredits","setShowAll","getCredits","cast","Actor","actorInfo","actor","actorConstants","actorActions","Collection","onDeleteCollection","ROUTES","component","initialState","trendingReducer","action","total_pages","toString","genresID","moivesReducer","newSelectedGenres","Array","isArray","console","log","newGenres","SHOW_LOADING","showLoading","uiReducer","uiConstants","tvSeriesReducer","FETCH_GENRES","FETCH_GENRES_SUCCESS","FETCH_GENRES_FAILED","SET_SELECTED_GENRES","SET_SELECTED_GENRES_ID","UPDATE_GENRES","genresReducer","genresConstants","totalResults","searchReducer","total_results","crewData","infoMessage","castMessage","watchReducer","fectInfoError","infoErrorMessage","crew","fetchCastError","castErrorMessage","actorImage","actorReducer","actorConstant","collectionReducer","newData","rootReducer","combineReducers","moviesReducer","ui","instance","create","interceptors","use","this","handleSuccess","handleError","Promise","reject","getGenres","API_ENDPOINT","axiosServices","getMovies","queryParams","Object","keys","qs","getSearchData","TypeString","getTrending","getTvSeries","getActorInfo","actorID","getInfo","getCast","fetchTrendingSaga","setCurrentPageTrendingSaga","fetchMoviesSaga","setCurrentPageMoviesSaga","fetchMoviesGenresSaga","setMoviesSelectedGenresIDSaga","fetchTvSeriesSaga","setTvSeriesCurrentPage","fetchTvSeriesGenresSaga","setTvSeriesSelectedGenresIDSaga","fetchSearchSaga","setCurrentPageSearchSaga","fetchInfoMovieSaga","fetchCastMovieSaga","fetchActorInfoSaga","rootSaga","put","delay","call","resp","select","with_genres","param","query","respActor","takeEvery","takeLatest","tvSeriesConstants","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","configureStore","middlewares","enhancers","applyMiddleware","store","createStore","run","LoadingContainer","Loading","LoadingImg","GlobalLoading","loadingImg","FooterContainer","TextWrapper","TextItem","TextTitle","TextLink","Footer","Container","App","route","renderRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.130512fc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst YELLOW = '#febb01';\r\n\r\nexport const NavBar = styled.div`\r\n    max-width: 100vw; \r\n    padding: 0 40px;\r\n    position: sticky;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 99;\r\n    background: linear-gradient(180deg, #0a0a19 0%,rgba(15,15,40,.8) 65%,rgba(15,15,40,0));\r\n    /* box-shadow: 0 1px 5px #000; */\r\n    @media screen and (max-width: 960px) {\r\n    padding: 0 25px;\r\n        \r\n    } \r\n\r\n`;\r\n\r\nexport const NavBarContent = styled.div`\r\n    width: 100%;\r\n    max-width: 1900px;\r\n    margin: auto;\r\n    height: 80px; \r\n    display: flex;\r\n    align-items: center; \r\n    justify-content: space-between;\r\n`;\r\n \r\nexport const NavBarBrand = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const Logo = styled.p`\r\n    font-size: 2.5rem;\r\n    color: ${({ color }) => (color ? color : '#FFF')};\r\n`;\r\n\r\nexport const Menu = styled.ul`\r\n    display: flex;\r\n    align-items: center;  \r\n    @media screen and (max-width: 960px) { \r\n        position: fixed; \r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100vw;  \r\n        height: 80px;\r\n        justify-content: center;\r\n        background: linear-gradient(0deg, #0a0a19 10%,rgba(15,15,40,.8) 65%,rgba(15,15,40,0)); \r\n    }\r\n`;\r\n\r\nexport const MenuItem = styled.li`\r\n    list-style: none;   \r\n    margin: 5px 20px;\r\n    @media screen and (max-width: 480px) {\r\n        margin: 5px;\r\n    }\r\n`;\r\n\r\nexport const MenuLink = styled(NavLink)`\r\n    color: #e5e5e5; \r\n    font-family: 'Be Vietnam', sans-serif;\r\n    font-size: 1rem;\r\n    text-decoration: none;\r\n    padding: 5px 10px; \r\n  \r\n    &:hover {\r\n        /* background-color: #FEBB01; */\r\n        color: ${YELLOW};\r\n    }\r\n    &.active {\r\n        background-color:  ${YELLOW};\r\n        color: #111;\r\n        border-radius: 4px;\r\n        box-shadow: 0px 3px 1px -2px rgb(190 190 190 / 20%), 0px 2px 2px 0px rgb(190 190 190 / 14%), 0px 1px 5px 0px rgb(190 190 190 / 12%);\r\n    }\r\n    \r\n`;\r\nexport const LeftMenu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\nexport const LeftMenuItem = styled(NavLink)`\r\n    color: ${YELLOW}; \r\n    font-size: 2rem;\r\n    margin-bottom: 10px;\r\n    margin-left: 20px;\r\n    border-bottom: 1px solid transparent;\r\n    &.active {\r\n         border-bottom: 1px solid ${YELLOW};\r\n    }\r\n`;\r\nexport const SearchControl = styled.div`\r\n    display: flex;\r\n`;","export const MESSAGES = {\r\n    null: 'no movies found',\r\n    title: 'Search for your favorite movies',\r\n}\r\n\r\nexport const NAV_LINKS = [\r\n    {\r\n        id: 0,\r\n        exact: true,\r\n        path: '/',\r\n        name: 'Trending'\r\n    },\r\n    {\r\n        id: 1,\r\n        path: '/movies',\r\n        name: 'Movies'\r\n    },\r\n    {\r\n        id: 2,\r\n        path: '/series',\r\n        name: 'TV Series'\r\n    },\r\n    // {\r\n    //     id: 3,\r\n    //     path: '/search',\r\n    //     name: 'Search'\r\n    // }\r\n];\r\n\r\n","export const ADD_COLLECTION = \"ADD_COLLECTION\"; \r\nexport const DELETE_COLLECTION = \"DELETE_COLLECTION\"; ","import * as collectionConstants from '../constants/collectionConstants';\r\n\r\nexport const addCollection = data => {\r\n    return {\r\n        type: collectionConstants.ADD_COLLECTION,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\nexport const deleteCollection = id => {\r\n    return {\r\n        type: collectionConstants.DELETE_COLLECTION,\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}","import {\r\n    Badge,\r\n    // FormControl, TextField, InputAdornment, ThemeProvider,\r\n    // createTheme\r\n} from '@material-ui/core'\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport {\r\n    LeftMenu, LeftMenuItem, Logo, Menu, MenuItem, MenuLink, NavBar, NavBarBrand, NavBarContent,\r\n\r\n} from './Header.styles'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport { NAV_LINKS } from '../../constants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as collectionActions from '../../actions/collectionActions';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n// const darkTheme = createTheme({\r\n//     palette: {\r\n//         type: \"dark\",\r\n//     }\r\n// })\r\n\r\nconst Header = () => {\r\n    // const [myCollection, setMyCollection] = useState([]);\r\n    const collection = useSelector(state => state.collections.collectionData);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (localStorage && localStorage.getItem('collection')) {\r\n            dispatch(collectionActions.addCollection(JSON.parse(localStorage.getItem('collection'))));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    const renderMenu = () => {\r\n        let menuItems = null;\r\n        if (NAV_LINKS) {\r\n            menuItems = NAV_LINKS.map(item => {\r\n                return (\r\n                    <MenuItem key={item.id} onClick={() => window.scroll(0, 0)}>\r\n                        <MenuLink\r\n                            to={item.path}\r\n                            exact={item.exact}\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            {item.name}\r\n                        </MenuLink>\r\n                    </MenuItem>\r\n                );\r\n            });\r\n        }\r\n        return menuItems;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <NavBar>\r\n                <NavBarContent>\r\n                    {/* <NavButtonMenuMobile\r\n                        onClick={() => setShowMenuMobile(!showMenuMobile)} \r\n                    >\r\n                       {\r\n                           showMenuMobile === true ?\r\n                           <MenuIcon fontSize=\"large\" />\r\n                           :\r\n                           <CloseIcon fontSize=\"large\"/>\r\n                       } \r\n                    </NavButtonMenuMobile> */}\r\n                    <NavBarBrand to=\"/\" onClick={() => { window.scroll(0, 0) }}>\r\n                        <Logo color={'#EF5014'}>VCT</Logo>\r\n                        <Logo>Films</Logo>\r\n                    </NavBarBrand>\r\n                    <Menu>\r\n                        {renderMenu()}\r\n                    </Menu>\r\n                    <LeftMenu>\r\n                        <LeftMenuItem to=\"/search\" activeClassName=\"active\">\r\n                            <SearchIcon />\r\n                            {/* <ThemeProvider theme={darkTheme}>\r\n                            <FormControl >\r\n                                <TextField\r\n                                    id=\"input-with-icon-textfield\"\r\n                                    placeholder=\"Nhập từ khoá tìm kiếm\"\r\n                                    color=\"secondary\"\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <SearchIcon />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </FormControl>\r\n                        </ThemeProvider> */}\r\n                        </LeftMenuItem>\r\n                        <LeftMenuItem to=\"/collection\" activeClassName=\"active\">\r\n                            <Badge badgeContent={collection?.length} color=\"secondary\">\r\n                                <VideoLibraryIcon />\r\n                            </Badge>\r\n                        </LeftMenuItem>\r\n                    </LeftMenu>\r\n                </NavBarContent>\r\n            </NavBar>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import styled, { createGlobalStyle } from \"styled-components\";\n\n\nconst YELLOW = '#febb01';\n// const GRAY = '#ccceca';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      /* font-family: 'Source Sans Pro', sans-serif; */\n      font-family: 'Be Vietnam', sans-serif; \n      /* scroll-behavior: smooth;   */\n      /* transition: all .2s ease; */\n    }\n    html, body {\n      font-size: 15px;\n      background-color: #11112C; \n      line-height: 1.5;\n      @media screen and (max-width: 960px) {\n        font-size: 13px;\n      }\n      \n    }\n\n`;\n\nexport const AppContainer = styled.div`\n  min-height: calc(100vh - 80px); \n  padding-top: 10px;\n  padding-bottom: 50px;     \n  @media screen and (max-width: 960px) {\n    padding-bottom: 100px; \n  }\n  \n`;\nexport const Title = styled.p`\n  color: ${YELLOW};\n  font-size: 2rem;\n  border-bottom: 1px solid ${YELLOW};\n  padding-bottom: 0.5rem;\n  \n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 350px);\n  margin-top: 20px;  \n  display: flex; \n  flex-flow: row wrap;\n  gap: 25px;   \n`;\n\n\nexport default GlobalStyle;","export const img_300 = \"https://image.tmdb.org/t/p/w300\";\r\nexport const img_500 = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n// contentModal and singleContent\r\nexport const unavailable =\r\n    \"https://www.movienewz.com/img/films/poster-holder.jpg\";\r\n\r\n// contentModal\r\nexport const unavailableLandscape =\r\n    \"https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg\";\r\n\r\n// For Carousel\r\nexport const noPicture =\r\n    \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\";","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nconst YELLOW = \"#febb01\";\r\nconst GRAY = \"#ccceca\";\r\n\r\nexport const ItemWrapper = styled.div`\r\n  width: calc(20% - 20px); \r\n  \r\n  @media screen and (max-width: 960px) {\r\n    width: calc(25% - 19px);\r\n  }\r\n  /* @media screen and (max-width: 820px) {\r\n    width: calc(20% - 20px);\r\n  } */\r\n  @media screen and (max-width: 768px) {\r\n    width: calc(33.3% - 17px);\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    width: calc(50% - 13px);\r\n  }\r\n`;\r\nexport const Item = styled(Link)`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border: 1px solid transparent;\r\n  position: relative;\r\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.4); \r\n  &::before {\r\n    content: \"${({ media_type }) => (media_type ? media_type : \"\")}\";\r\n    background-color: #a81212;\r\n    padding: 2px 8px;\r\n    font-family: 'Source Sans Pro', sans-serif; \r\n    position: absolute;\r\n    top: 5px;\r\n    left: 5px;\r\n    box-shadow: 1px 3px 3px rgba(0, 0, 0, 0.5),\r\n      inset 1px -1px 3px rgba(0, 0, 0, 0.5), inset 0 1px 3px rgba(0, 0, 0, 0.2);\r\n  }\r\n  &:hover {\r\n    border: 1px solid rgb(7, 84, 66, 0.3);\r\n    box-shadow: 0px 7px 15px rgba(0, 0, 0, 0.7);\r\n    cursor: pointer;\r\n    & > b {\r\n      padding: 0 10px;\r\n      line-height: 2rem;  \r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      text-align: center;\r\n      justify-content: center;\r\n      background: rgb(2, 0, 36);\r\n      background: linear-gradient(\r\n        0deg,\r\n        rgba(2, 0, 36, 0) 0%,\r\n        rgba(0, 0, 0, 0.5) 50%,\r\n        rgba(0, 0, 0, 0.6) 64%,\r\n        rgba(0, 0, 0, 0) 100%\r\n      );\r\n    }\r\n  }\r\n   \r\n`;\r\n\r\nexport const ItemMedia = styled.img`\r\n  width: 100%;\r\n  display: block;\r\n`;\r\nexport const ItemContent = styled.div`\r\n  padding: 5px;\r\n`;\r\nexport const ItemTitle = styled.h1`\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n  color: ${YELLOW};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  word-spacing: 0.2rem;\r\n  margin-bottom: 0.3rem;\r\n`;\r\nexport const ItemName = styled.b`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: none; \r\n  & > p {\r\n    font-weight: 600;\r\n    font-size: 1.3rem;\r\n    color: #eeeeee;\r\n    text-shadow: 3px 5px 3px #9e9e9e;\r\n    transform: translateY(-30px);\r\n  }\r\n`;\r\nexport const ItemType = styled.div`\r\n  text-align: end;\r\n  margin: 10px 0;\r\n`;\r\nexport const ItemBadge = styled.span`\r\n  padding: 0 5px;\r\n  border-radius: 5px;\r\n  background-color: #c2210c;\r\n  box-shadow: 1px 3px 3px rgba(0, 0, 0, 0.5),\r\n    inset 1px -1px 3px rgba(0, 0, 0, 0.5), inset 0 1px 3px rgba(0, 0, 0, 0.2);\r\n`;\r\nexport const ItemBottom = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  margin-top: 0.5rem;\r\n`;\r\nexport const ItemPopularity = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 5px;\r\n  color: ${GRAY};\r\n  font-size: 1rem; \r\n  font-family: 'Source Sans Pro', sans-serif;\r\n\r\n`;\r\n\r\nexport const ItemDate = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${GRAY};\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const ItemButtonDelete = styled.div`\r\n  width: 25px;\r\n  display: flex;\r\n  justify-content: center; \r\n  margin-left: auto;\r\n  color: #ffffff;  \r\n  background-color: #c2210c; \r\n  transform: translateY(11px);\r\n  position: relative;\r\n  z-index: 9999;\r\n  box-shadow: 1px 3px 3px rgba(0, 0, 0, 0.5),\r\n    inset 1px -1px 3px rgba(0, 0, 0, 0.5), inset 0 1px 3px rgba(0, 0, 0, 0.2);\r\n`;","const toSlug = (str) => {\r\n    // Chuyển hết sang chữ thường\r\n    str = str.toLowerCase();\r\n    // xóa dấu\r\n    str = str\r\n        .normalize('NFD') // chuyển chuỗi sang unicode tổ hợp\r\n        .replace(/[\\u0300-\\u036f]/g, ''); // xóa các ký tự dấu sau khi tách tổ hợp \r\n    // Thay ký tự đĐ\r\n    str = str.replace(/[đĐ]/g, 'd');\r\n    // Xóa ký tự đặc biệt\r\n    str = str.replace(/([^0-9a-z-\\s])/g, '');\r\n    // Xóa khoảng trắng thay bằng ký tự -\r\n    str = str.replace(/(\\s+)/g, '-');\r\n    // Xóa ký tự - liên tiếp\r\n    str = str.replace(/-+/g, '-');\r\n    // xóa phần dư - ở đầu & cuối\r\n    str = str.replace(/^-+|-+$/g, '');\r\n    // return\r\n    return str;\r\n}\r\nexport default toSlug;","const convertDate = (date) => {\r\n    if (date) return date.split(\"-\").reverse().join('-');\r\n}\r\n\r\nexport default convertDate;","import VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport PlayCircleFilledWhiteOutlinedIcon from '@material-ui/icons/PlayCircleFilledWhiteOutlined';\r\nimport StarRatings from 'react-star-ratings';\r\nimport { img_300, unavailable } from '../../config/config';\r\nimport { ItemWrapper, Item, ItemBottom, ItemButtonDelete, ItemContent, ItemDate, ItemMedia, ItemName, ItemPopularity, ItemTitle } from './SingleContent.styles';\r\nimport useSlug from '../../hooks/useSlug';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport useConvertDate from '../../hooks/useCovertDate';\r\n\r\nconst SingleContent = ({ item, media_type, collection, deleteCollection }) => {\r\n    const { poster_path, title, name, vote_average, popularity, release_date, first_air_date, id } = item;\r\n    let mainName = title ? title : name;\r\n    mainName = useSlug(mainName);\r\n    const mediaType = media_type === 'Tv Series' ? 'tv' : media_type.toLowerCase();\r\n\r\n    const onHandleDelete = id => {\r\n        deleteCollection(id);\r\n    }\r\n    return (\r\n        <ItemWrapper>\r\n            {\r\n                collection && <ItemButtonDelete\r\n                    onClick={() => { onHandleDelete(id) }}\r\n                >\r\n                    <ClearIcon />\r\n                </ItemButtonDelete>\r\n            }\r\n            <Item\r\n                to={`/watch/${mediaType}/${mainName}-${id}`}\r\n                media_type={media_type}\r\n            >\r\n                <ItemMedia src={poster_path ? `${img_300}/${poster_path}` : unavailable} />\r\n                <ItemContent>\r\n                    <ItemTitle>\r\n                        {title || name}\r\n                    </ItemTitle>\r\n                    <StarRatings\r\n                        numberOfStars={10}\r\n                        starRatedColor=\"#C2210C\"\r\n                        rating={vote_average}\r\n                        starDimension=\"14px\"\r\n                        starSpacing=\"1px\"\r\n                    />\r\n                    <ItemBottom>\r\n                        <ItemPopularity>\r\n                            <VisibilityIcon style={{ color: '#EEB406', marginRight: '5px' }} />\r\n                            {popularity}\r\n                        </ItemPopularity>\r\n                        <ItemDate>\r\n                            <DateRangeIcon\r\n                                style={{ fontSize: '15px', marginRight: '5px' }}\r\n                                    />\r\n                                    { useConvertDate(release_date || first_air_date)}\r\n                        </ItemDate>\r\n                    </ItemBottom>\r\n                </ItemContent>\r\n                <ItemName>\r\n                    <p>{title || name}</p>\r\n                    <PlayCircleFilledWhiteOutlinedIcon fontSize=\"large\" style={{ color: \"#febb13\" }} />\r\n                </ItemName>\r\n            </Item>\r\n\r\n        </ItemWrapper>\r\n    )\r\n}\r\n\r\nexport default SingleContent\r\n","import styled from \"styled-components\";\r\n\r\nexport const CustomPagi = styled.div`\r\n    max-width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n`;","import React from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core';\r\nimport { CustomPagi } from './CustomPagination.styles';\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n    }\r\n})\r\n\r\nconst CustomPagination = ({ setPage, numberOfPages, currentPage }) => {\r\n    const handlePageChange = (e) => {\r\n        let pageSelected = e.target.textContent;\r\n        setPage(pageSelected);\r\n        window.scroll(0, 0);\r\n    }\r\n    return (\r\n        <CustomPagi>\r\n            <ThemeProvider theme={darkTheme}>\r\n                <Pagination\r\n                    count={numberOfPages}\r\n                    page={parseInt(currentPage)}\r\n                    shape=\"rounded\"\r\n                    size=\"small\"\r\n                    onChange={(e) => handlePageChange(e)}\r\n                    hidePrevButton\r\n                    hideNextButton\r\n                />\r\n            </ThemeProvider>\r\n        </CustomPagi>\r\n    )\r\n}\r\n\r\nexport default CustomPagination\r\n","export const FECTH_TRENDING = 'FECTH_TRENDING';\r\nexport const FECTH_TRENDING_SUCCESS = 'FECTH_TRENDING_SUCCESS';\r\nexport const FECTH_TRENDING_FAILED = 'FECTH_TRENDING_FAILED';\r\n\r\nexport const SET_TRENDING_CURRENT_PAGE = 'SET_TRENDING_CURRENT_PAGE';\r\n\r\n","import * as trendingConstants from '../constants/trendingConstants';\r\n\r\nexport const fecthTrending = (params = {}) => {\r\n    return {\r\n        type: trendingConstants.FECTH_TRENDING,\r\n        payload: {\r\n            params,\r\n        }\r\n    }\r\n}\r\n\r\nexport const fecthTrendingSuccess = (data) => {\r\n    return {\r\n        type: trendingConstants.FECTH_TRENDING_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const fecthTrendingFailed = (error) => {\r\n    return {\r\n        type: trendingConstants.FECTH_TRENDING_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport const setTrendingCurrentPage = (number) => {\r\n    return {\r\n        type: trendingConstants.SET_TRENDING_CURRENT_PAGE,\r\n        payload: {\r\n            number\r\n        }\r\n    }\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const ErrorContainer = styled.div`\r\n    width: 100%;\r\n    height: inherit;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ErrorContent = styled.div` \r\n    margin-top: -50px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const ErrorTitle = styled.h1`\r\n    color: #febb01;\r\n    font-size: 1.7rem;\r\n    margin-bottom: 5px;\r\n`;\r\nexport const ErrorDesc = styled.p`\r\n    color: #FFFFFF;\r\n    font-size: 0.9rem;\r\n    letter-spacing: 1px;\r\n`;","import React from 'react'\r\nimport { ErrorContainer, ErrorContent, ErrorTitle, ErrorDesc } from './Error.styles'\r\n\r\nconst Error = ({errorMessage}) => {\r\n    return (\r\n        <ErrorContainer>\r\n            <ErrorContent>\r\n                <ErrorTitle>\r\n                    {errorMessage}\r\n                </ErrorTitle>\r\n                <ErrorDesc>\r\n                {/* Request failed */}\r\n                </ErrorDesc>\r\n            </ErrorContent>\r\n        </ErrorContainer>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { Title, Content } from '../../globalStyles';\r\nimport SingleContent from '../../components/SingleContent/SingleContent';\r\nimport CustomPagination from '../../components/Pagination/CustomPagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as trendingActions from '../../actions/trendingActions';\r\nimport Error from '../../components/Error/Error';\r\nconst Trending = ({ name }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const listTrending = useSelector(state => state.trending.listTrending);\r\n    const numberOfPages = useSelector(state => state.trending.totalPages);\r\n    const currentPage = useSelector(state => state.trending.currentPage);\r\n    const error = useSelector(state => state.trending.error); \r\n    \r\n    const setCurrentPage = (page) => {\r\n        dispatch(trendingActions.setTrendingCurrentPage(page));\r\n    }\r\n    useEffect(() => {\r\n        dispatch(trendingActions.fecthTrending());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            <Title>{name}</Title>\r\n            <Content>\r\n                {\r\n                    listTrending && error === \"\" ?\r\n                        listTrending.map(item => {\r\n                            return (\r\n                                <SingleContent\r\n                                    key={item.id}\r\n                                    item={item}\r\n                                    media_type={item.media_type === 'tv' ? 'Tv Series' : 'Movie'}\r\n                                />\r\n                            );\r\n                        })\r\n                        : <Error errorMessage={error} />\r\n                }\r\n            </Content>\r\n            {\r\n                listTrending && error === \"\" &&\r\n                <CustomPagination\r\n                    setPage={setCurrentPage}\r\n                    numberOfPages={numberOfPages}\r\n                    currentPage={currentPage}\r\n                />\r\n            }\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Trending\r\n","export const FETCH_TVSERIES = 'FETCH_TVSERIES';\r\nexport const FETCH_TVSERIES_SUCCESS = 'FETCH_TVSERIES_SUCCESS';\r\nexport const FETCH_TVSERIES_FAILED = 'FETCH_TVSERIES_FAILED';\r\n\r\nexport const SET_TVSERIES_CURRENT_PAGE = 'SET_TVSERIES_CURRENT_PAGE';\r\n\r\nexport const FETCH_TVSERIES_GENRES = 'FETCH_TVSERIES_GENRES';\r\nexport const FETCH_TVSERIES_GENRES_SUCCESS = 'FETCH_TVSERIES_GENRES_SUCCES';\r\nexport const FETCH_TVSERIES_GENRES_FAILED = 'FETCH_TVSERIES_GENRES_FAILED';\r\n\r\n\r\nexport const SET_TVSERIES_SELECTED_GENRES= 'SET_TVSERIES_SELECTED_GENRES';\r\n\r\nexport const SET_TVSERIES_SELECTED_GENRES_ID = 'SET_TVSERIES_SELECTED_GENRES_ID';\r\n\r\nexport const UPDATE_TVSERIES_GENRES = 'UPDATE_TVSERIES_GENRES';","import * as tvSeriesTypes from '../constants/tvSeriesConstants';\r\n\r\nexport const fetchTvSeries = (params = {}) => {\r\n    return {\r\n        type: tvSeriesTypes.FETCH_TVSERIES,\r\n        payload: {\r\n            params,\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchTvSeriesSuccess = (data) => {\r\n    return {\r\n        type: tvSeriesTypes.FETCH_TVSERIES_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchTvSeriesFailed = (error) => {\r\n    return {\r\n        type: tvSeriesTypes.FETCH_TVSERIES_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport const setTvSeriesCurrentPage = (number) => {\r\n    return {\r\n        type: tvSeriesTypes.SET_TVSERIES_CURRENT_PAGE,\r\n        payload: {\r\n            number\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchTvSeriesGenres = (type) => {\r\n    return {\r\n        type: tvSeriesTypes.FETCH_TVSERIES_GENRES,\r\n        payload: {\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchTvSeriesGenresSuccess = (data) => {\r\n    return {\r\n        type: tvSeriesTypes.FETCH_TVSERIES_GENRES_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchTvSeriesGenresFailed = (error) => {\r\n    return {\r\n        type: tvSeriesTypes.FETCH_TVSERIES_GENRES_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport const setTvSeriesSelectedGenres = (genres) => {\r\n    return {\r\n        type: tvSeriesTypes.SET_TVSERIES_SELECTED_GENRES,\r\n        payload: {\r\n            genres\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateTvSeriesGenres = (data) => {\r\n    return {\r\n        type: tvSeriesTypes.UPDATE_TVSERIES_GENRES,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setTvSeriesSelectedGenresId = (genres) => {\r\n    return {\r\n        type: tvSeriesTypes.SET_TVSERIES_SELECTED_GENRES_ID,\r\n        payload: {\r\n            genres\r\n        }\r\n    }\r\n}","export const FETCH_MOVIES = 'FETCH_MOVIES';\r\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\r\nexport const FETCH_MOVIES_FAILED = 'FETCH_MOVIES_FAILED';\r\nexport const SET_CURRENT_PAGE_MOVIES = 'SET_CURRENT_PAGE_MOVIES';\r\n\r\nexport const FETCH_MOVIES_GENRES = 'FETCH_MOVIES_GENRES';\r\nexport const FETCH_MOVIES_GENRES_SUCCESS = 'FETCH_MOVIES_GENRES_SUCCES';\r\nexport const FETCH_MOVIES_GENRES_FAILED = 'FETCH_MOVIES_GENRES_FAILED';\r\n\r\n\r\nexport const SET_MOVIES_SELECTED_GENRES= 'SET_MOVIES_SELECTED_GENRES';\r\n\r\nexport const SET_MOVIES_SELECTED_GENRES_ID = 'SET_MOVIES_SELECTED_GENRES_ID';\r\n\r\nexport const UPDATE_MOVIES_GENRES = 'UPDATE_MOVIES_GENRES';\r\n\r\n","import * as moviesConstants from '../constants/moviesConstants';\r\n\r\nexport const fetchMovies = (params = {}) => {\r\n    return {\r\n        type: moviesConstants.FETCH_MOVIES,\r\n        payload: {\r\n            params\r\n        },\r\n    };\r\n};\r\n\r\nexport const fetchMoviesSuccess = (data) => {\r\n    return {\r\n        type: moviesConstants.FETCH_MOVIES_SUCCESS,\r\n        payload: {\r\n            data\r\n        },\r\n    };\r\n};\r\n\r\nexport const fetchMoviesFailed = (error) => {\r\n    return {\r\n        type: moviesConstants.FETCH_MOVIES_FAILED,\r\n        payload: {\r\n            error\r\n        },\r\n    };\r\n};\r\n\r\nexport const setMoviesCurrentPage = (number) => {\r\n    return {\r\n        type: moviesConstants.SET_CURRENT_PAGE_MOVIES,\r\n        payload: {\r\n            number\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchMoviesGenres = (type) => {\r\n    return {\r\n        type: moviesConstants.FETCH_MOVIES_GENRES,\r\n        payload: {\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchMoviesGenresSuccess = (data) => {\r\n    return {\r\n        type: moviesConstants.FETCH_MOVIES_GENRES_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchMoviesGenresFailed = (error) => {\r\n    return {\r\n        type: moviesConstants.FETCH_MOVIES_GENRES_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport const setMoviesSelectedGenres = (genres) => {\r\n    return {\r\n        type: moviesConstants.SET_MOVIES_SELECTED_GENRES,\r\n        payload: {\r\n            genres\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateMoviesGenres = (data) => {\r\n    return {\r\n        type: moviesConstants.UPDATE_MOVIES_GENRES,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setMoviesSelectedGenresId = (genres) => {\r\n    return {\r\n        type: moviesConstants.SET_MOVIES_SELECTED_GENRES_ID,\r\n        payload: {\r\n            genres\r\n        }\r\n    }\r\n}","import { Chip } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const GenresContainer = styled.div`\r\n    margin: 6px 0;\r\n`;\r\nexport const GenresTitle = styled.span`\r\n    color: #FFF;\r\n    margin-right: 4px;\r\n    padding-bottom: 2px;\r\n    border-bottom: 1px solid #C23012;\r\n    \r\n`;\r\n\r\nexport const ChipElement = styled(Chip)`\r\n    margin: 2px !important;\r\n    border-radius: 4px !important;\r\n    box-shadow: 1px 3px 3px rgb(0 0 0 / 50%), inset 1px -1px 3px rgb(0 0 0 / 50%), inset 0 1px 3px rgb(0 0 0 / 20%);   \r\n\r\n`;\r\n\r\nexport const ErrorMessage = styled.span`\r\n    color: #FEBB13;\r\n    font-style: italic;\r\n    \r\n`;","\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as moviesActions from '../../actions/moviesActions';\r\nimport * as tvSeriesActions from '../../actions/tvSeriesActions';\r\nimport { ChipElement, ErrorMessage, GenresContainer, GenresTitle } from './Genres.styles';\r\n\r\nconst Genres = ({\r\n    type,\r\n    selectedGenres,\r\n    setSelectedGenres,\r\n    genres,\r\n    updateGenres,\r\n    errorMessage\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (type === 'tv') {\r\n            dispatch(tvSeriesActions.fetchTvSeriesGenres(type));\r\n        } else if (type === 'movie') {\r\n            dispatch(moviesActions.fetchMoviesGenres(type));\r\n        }\r\n\r\n    }, [dispatch, type]);\r\n\r\n    const handleAdd = (genre) => {\r\n\r\n        setSelectedGenres([...selectedGenres, genre]);\r\n        updateGenres(genre);\r\n        // setPage(1);\r\n    }\r\n    const handleRemove = (genre) => {\r\n\r\n        setSelectedGenres(genre);\r\n        updateGenres([...genres, genre]);\r\n        // setPage(1);\r\n    }\r\n    const renderGenres = () => {\r\n        let xhtml = null;\r\n        if (genres && genres.length > 0) {\r\n            xhtml = genres.map(genre => {\r\n                return (\r\n                    <ChipElement\r\n                        label={genre.name}\r\n                        key={genre.id}\r\n                        clickable\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => handleAdd(genre)}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n        return xhtml;\r\n    }\r\n    const renderGenresSelected = () => {\r\n        let xhtml = null;\r\n        if (selectedGenres && selectedGenres.length > 0) {\r\n            xhtml = selectedGenres.map((genre) => {\r\n                return (\r\n                    <ChipElement\r\n                        label={genre.name}\r\n                        key={genre.id}\r\n                        color=\"secondary\"\r\n                        clickable\r\n                        size=\"small\"\r\n                        onDelete={() => handleRemove(genre)}\r\n                    />\r\n                )\r\n            });\r\n        }\r\n        return xhtml;\r\n    }\r\n    return (\r\n        <GenresContainer>\r\n            <GenresTitle>Genres: </GenresTitle>\r\n            {\r\n                errorMessage !== \"\" &&\r\n                <ErrorMessage>{errorMessage + \" (｡>﹏<｡)\"}</ErrorMessage>\r\n            }\r\n            {\r\n                renderGenresSelected()\r\n            }\r\n            {\r\n                renderGenres()\r\n            }\r\n        </GenresContainer>\r\n    )\r\n}\r\n\r\nexport default Genres\r\n","const useGenres = (selectedGenres) => {\r\n    if(selectedGenres.length < 1 ) return \"\";\r\n    const GenreIds = selectedGenres.map((g) => g.id);\r\n    return GenreIds.reduce((acc, curr) => acc + ',' + curr);\r\n\r\n}\r\n\r\nexport default useGenres;","import React, { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as tvSeriesActions from '../../actions/tvSeriesActions';\r\nimport Error from '../../components/Error/Error';\r\nimport Genres from '../../components/Genres/Genres';\r\nimport CustomPagination from '../../components/Pagination/CustomPagination';\r\nimport SingleContent from '../../components/SingleContent/SingleContent';\r\nimport { Content, Title } from '../../globalStyles';\r\nimport useGenres from '../../hooks/useGenre';\r\n\r\nconst Series = ({ name }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const listTvSeries = useSelector(state => state.tvSeries.listTvSeries);\r\n    const totalPages = useSelector(state => state.tvSeries.totalPages);\r\n    const listSelectedGenres = useSelector(state => state.tvSeries.listSelectedGenres);\r\n    const listGenres = useSelector(state => state.tvSeries.listGenres);\r\n    const currentPage = useSelector(state => state.tvSeries.currentPage);\r\n    const tvSeriesError = useSelector(state => state.tvSeries.fetchTvSeriesError);\r\n    const genresError = useSelector(state => state.tvSeries.fetchGenreError);\r\n    const genreforURL = useGenres(listSelectedGenres);\r\n\r\n    const setSelectedGenres = genres => {\r\n        dispatch(tvSeriesActions.setTvSeriesSelectedGenres(genres));\r\n    }\r\n    const updateGenres = (genres) => {\r\n        dispatch(tvSeriesActions.updateTvSeriesGenres(genres));\r\n    }\r\n    const setCurrentPage = page => {\r\n        dispatch(tvSeriesActions.setTvSeriesCurrentPage(page));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (genreforURL) {\r\n            dispatch(tvSeriesActions.setTvSeriesSelectedGenresId(genreforURL));\r\n        } else {\r\n            dispatch(tvSeriesActions.fetchTvSeries());\r\n        }\r\n    }, [dispatch, genreforURL]);\r\n    // set lai state\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(tvSeriesActions.setTvSeriesSelectedGenres([])); \r\n        };\r\n    },[dispatch]);\r\n    return (\r\n        <Fragment>\r\n            <Title>{name}</Title>\r\n            <Genres\r\n                type=\"tv\"\r\n                genres={listGenres}\r\n                errorMessage={genresError}\r\n                selectedGenres={listSelectedGenres}\r\n                setSelectedGenres={setSelectedGenres}\r\n                updateGenres={updateGenres}\r\n            />\r\n            <Content>\r\n                {\r\n                    listTvSeries && tvSeriesError === \"\" ?\r\n                        listTvSeries.map(item => {\r\n                            return (\r\n                                <SingleContent\r\n                                    key={item.id}\r\n                                    item={item}\r\n                                    media_type={'Tv Series'}\r\n                                />\r\n                            );\r\n                        })\r\n                        :\r\n                        <Error errorMessage={tvSeriesError} />\r\n                }\r\n            </Content>\r\n            {\r\n                listTvSeries && tvSeriesError === \"\" &&\r\n                <CustomPagination\r\n                    setPage={setCurrentPage}\r\n                    numberOfPages={totalPages}\r\n                    currentPage={currentPage}\r\n                />\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Series\r\n","import React, { useRef } from 'react'\r\nimport { FormControl, TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst SearchControl = ({ searchChange }) => {\r\n    const txtSearchRef = useRef(null);\r\n\r\n    const onInputChange = (e) => {\r\n        const value = e.target.value;\r\n        if (txtSearchRef.current) {\r\n            clearTimeout(txtSearchRef.current);\r\n        }\r\n        txtSearchRef.current = setTimeout(() => {\r\n            const formValues = {\r\n                txtSearch: value\r\n            }\r\n            searchChange(formValues);\r\n        }, 500);\r\n    }\r\n    return (\r\n        <FormControl fullWidth >\r\n            <TextField\r\n                style={{ marginBottom: 10 }}\r\n                inputProps={{\r\n                    min: 0,\r\n                    style: {\r\n                        textAlign: 'center',\r\n                        paddingBottom: 10\r\n                    }\r\n                }}\r\n                id=\"standard-full-width\"\r\n                placeholder=\"Enter keywords to search\"\r\n                type=\"string\"\r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                onChange={(e) => onInputChange(e)}\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nSearchControl.propTypes = {\r\n    onSearchChange: PropTypes.func,\r\n}\r\nSearchControl.defaultProps = {\r\n    onSearchChange: null,\r\n}\r\nexport default SearchControl\r\n","export const SET_KEYWORD = \"SET_KEYWORD\";\r\nexport const SET_TYPE = \"SET_TYPE\";\r\n\r\n\r\nexport const FETCH_SEARCH = \"FETCH_SEARCH\";\r\nexport const FETCH_SEARCH_SUCCESS = \"FETCH_SEARCH_SUCCESS\";\r\nexport const FETCH_SEARCH_FAILED = \"FETCH_SEARCH_FAILED\";\r\n\r\nexport const SET_CURRENT_PAGE_SEARCH = \"SET_CURRENT_PAGE_SEARCH\";","import * as searchConstants from '../constants/searchConstants';\r\n\r\nexport const setKeyword = (keyword) => {\r\n    return {\r\n        type: searchConstants.SET_KEYWORD,\r\n        payload: {\r\n            keyword\r\n        }\r\n    }\r\n}\r\n\r\nexport const setType = (type) => {\r\n    return {\r\n        type: searchConstants.SET_TYPE,\r\n        payload: {\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchSearch = (type, params = {}) => {\r\n    return {\r\n        type: searchConstants.FETCH_SEARCH,\r\n        payload: {\r\n            type,\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchSearchSuccess = (data) => {\r\n    return {\r\n        type: searchConstants.FETCH_SEARCH_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\nexport const fetchSearchFailed = (error) => {\r\n    return {\r\n        type: searchConstants.FETCH_SEARCH_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (page) => {\r\n    return {\r\n        type: searchConstants.SET_CURRENT_PAGE_SEARCH,\r\n        payload: {\r\n            page\r\n        }\r\n    }\r\n}","import { createTheme, Tab, Tabs, ThemeProvider } from '@material-ui/core'\r\n\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport SearchControl from '../../components/SearchControl/SearchControl';\r\nimport { Content, Title } from '../../globalStyles'\r\nimport * as searchActions from '../../actions/searchActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleContent from '../../components/SingleContent/SingleContent';\r\nimport Error from '../../components/Error/Error';\r\nimport CustomPagination from '../../components/Pagination/CustomPagination';\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: {\r\n            main: \"#FFF\",\r\n        },\r\n    },\r\n});\r\n\r\nconst Search = ({ name }) => {\r\n\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    const value =  useSelector(state => state.search.type);\r\n    const keyword = useSelector(state => state.search.keyword);   \r\n    const listDataSearch = useSelector(state => state.search.listData);\r\n    const message = useSelector(state => state.search.message);\r\n    const totalPages = useSelector(state => state.search.totalPages);\r\n    const currentPage = useSelector(state => state.search.currentPage);\r\n\r\n    //   \r\n    const handleChange = (event, newValue) => { \r\n       dispatch(searchActions.setType(newValue));\r\n    };\r\n    // \r\n    const onSearchChange = value => {\r\n        dispatch(searchActions.setKeyword(value));\r\n    }\r\n    // \r\n    const setCurrentPage = page => {\r\n        dispatch(searchActions.setCurrentPage(page));\r\n    }\r\n    // \r\n    useEffect(() => {\r\n        if (keyword !== \"\") { \r\n            const params = {\r\n                keyword: keyword, \r\n            }\r\n            dispatch(searchActions.fetchSearch(value, params));\r\n        }\r\n    }, [value, keyword, dispatch]);\r\n    // \r\n    return (\r\n        <Fragment>\r\n            <Title>{name}</Title>\r\n            <ThemeProvider theme={darkTheme}>\r\n                <SearchControl searchChange={onSearchChange} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered={true}\r\n                    aria-label=\"full width tabs\" \r\n                >\r\n                    <Tab label=\"Movies\" />\r\n                    <Tab label=\"Tv Series\" />\r\n                </Tabs>\r\n            </ThemeProvider>\r\n            <Content>\r\n                {\r\n                    listDataSearch.length > 0 ?\r\n                        listDataSearch.map(item => {\r\n                            return (\r\n                                <SingleContent\r\n                                    key={item.id}\r\n                                    item={item}\r\n                                    media_type={value === 0 ? 'Movie' : 'Tv Series'}\r\n                                />\r\n                            );\r\n                        })\r\n                        :\r\n                        <Error errorMessage={message} />\r\n                }\r\n            </Content>\r\n            {\r\n                 listDataSearch.length > 0 &&\r\n                <CustomPagination\r\n                    setPage={setCurrentPage}\r\n                    numberOfPages={totalPages}\r\n                    currentPage={currentPage}\r\n                />\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Content, Title } from '../../globalStyles'\r\nimport SingleContent from '../../components/SingleContent/SingleContent';\r\nimport CustomPagination from '../../components/Pagination/CustomPagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as moviesActions from '../../actions/moviesActions';\r\nimport Genres from '../../components/Genres/Genres';\r\nimport useGenres from '../../hooks/useGenre';\r\nimport Error from '../../components/Error/Error';\r\n\r\nconst Movies = ({ name }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const listMovies = useSelector(state => state.movies.listMovies);\r\n    const totalPages = useSelector(state => state.movies.totalPages);\r\n    const listSelectedGenres = useSelector(state => state.movies.listSelectedGenres);\r\n    const listGenres = useSelector(state => state.movies.listGenres);\r\n    const currentPage = useSelector(state => state.movies.currentPage);\r\n    const error = useSelector(state => state.movies.error);\r\n    const genreErrorMessage = useSelector(state => state.movies.fetchGenreError);\r\n    const genreforURL = useGenres(listSelectedGenres);\r\n\r\n    const setSelectedGenres = genres => {\r\n        dispatch(moviesActions.setMoviesSelectedGenres(genres));\r\n    }\r\n    const updateGenres = (genres) => {\r\n        dispatch(moviesActions.updateMoviesGenres(genres));\r\n    }\r\n    const setCurrentPage = page => {\r\n        dispatch(moviesActions.setMoviesCurrentPage(page));\r\n    }\r\n    useEffect(() => {\r\n        if (genreforURL) {\r\n            dispatch(moviesActions.setMoviesSelectedGenresId(genreforURL));\r\n        } else {\r\n            dispatch(moviesActions.fetchMovies());\r\n        }\r\n    }, [dispatch, genreforURL]);\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(moviesActions.fetchMovies());\r\n    // }, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Title>{name}</Title>\r\n            {\r\n                listMovies && error === \"\" &&\r\n                <Genres\r\n                    type=\"movie\"\r\n                    selectedGenres={listSelectedGenres}\r\n                    setSelectedGenres={setSelectedGenres}\r\n                    genres={listGenres}\r\n                    updateGenres={updateGenres}\r\n                    setPage={setCurrentPage}\r\n                    errorMessage={genreErrorMessage}\r\n                /> \r\n            }\r\n            <Content>\r\n                {\r\n                    listMovies && error === \"\" ?\r\n                        listMovies.map(item => {\r\n                            return (\r\n                                <SingleContent\r\n                                    key={item.id}\r\n                                    item={item}\r\n                                    media_type={'Movie'} \r\n                                />\r\n                            );\r\n                        })\r\n                        :\r\n                        <Error errorMessage={error} />\r\n                }\r\n            </Content>\r\n            {\r\n                listMovies && error === \"\" &&\r\n                <CustomPagination\r\n                    setPage={setCurrentPage}\r\n                    numberOfPages={totalPages}\r\n                    currentPage={currentPage}\r\n                />\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","export const FETCH_INFO = 'FETCH_INFO';\r\nexport const FETCH_INFO_SUCCESS = 'FETCH_INFO_SUCCESS';\r\nexport const FETCH_INFO_FAILED = 'FETCH_INFO_FAILED';\r\n\r\nexport const FETCH_CAST = 'FETCH_CAST';\r\nexport const FETCH_CAST_SUCCESS = 'FETCH_CAST_SUCCESS';\r\nexport const FETCH_CAST_FAILED = 'FETCH_CAST_FAILED';","import * as watchConstants from '../constants/watchConstants';\r\n\r\nexport const fetchInfo = (mediaType, id) => {\r\n    return {\r\n        type: watchConstants.FETCH_INFO,\r\n        payload: {\r\n            mediaType,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchInfoSuccess = data => {\r\n    return {\r\n        type: watchConstants.FETCH_INFO_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchInfoFailed = error => {\r\n    return {\r\n        type: watchConstants.FETCH_INFO_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchCast = (mediaType, id) => {\r\n    return {\r\n        type: watchConstants.FETCH_CAST,\r\n        payload: {\r\n            mediaType,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchCastSuccess = data => {\r\n    return {\r\n        type: watchConstants.FETCH_CAST_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchCastFailed = error => {\r\n    return {\r\n        type: watchConstants.FETCH_CAST_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nimport { Link } from \"react-router-dom\";\r\nimport styled  from \"styled-components\";\r\n\r\n\r\nexport const CastWrapper = styled.div`\r\n   \r\n`;\r\nexport const CastHeader = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-between; \r\n    color: #e5e5e5;  \r\n`;\r\nexport const CastContent = styled.div`\r\n    display: flex;\r\n    margin-right: -25px;\r\n    margin-top: 15px;\r\n    flex-flow: row wrap;\r\n`;\r\n\r\nexport const CastItem = styled(Link)`  \r\n    width: 100%;\r\n    max-width: calc(10% - 25px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: 25px;  \r\n    margin-bottom: 15px;\r\n    text-decoration: none; \r\n    &:hover {\r\n        & > div { \r\n            box-shadow: 0px 0px 7px rgb(255 255 255 / 70%); \r\n        }\r\n    }\r\n    @media screen and (max-width: 1024px) {\r\n        max-width: calc(12.44444% - 25px);\r\n    }\r\n    @media screen and (max-width: 959px) {\r\n        max-width: calc(10% - 25px);\r\n    }\r\n    @media screen and (max-width: 767px) {\r\n        max-width: calc(12.44444% - 25px);\r\n    }\r\n    @media screen and (max-width: 599px) {\r\n        max-width: calc(14.22222% - 25px);\r\n    }\r\n    @media screen and (max-width: 479px) {\r\n        max-width: calc(16.66667% - 25px);\r\n    }\r\n    @media screen and (max-width: 479px) {\r\n        max-width: calc(20% - 25px);\r\n    }\r\n    \r\n`;\r\nexport const CastItemImg = styled.div` \r\n    overflow: hidden;\r\n    height: 70px; \r\n    border-radius: 4px;\r\n    margin-bottom: 5px;\r\n   \r\n`;\r\nexport const CastImg = styled.img`\r\n    display: block;\r\n    width: 100%;  \r\n    height: 100%;\r\n    object-fit: cover;\r\n`;\r\nexport const CastItemName = styled.span`\r\n    color: #e5e5e5;\r\n    font-size: 0.8rem; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\nexport const MoreCast = styled.div`\r\n    & > a {\r\n        text-decoration: none; \r\n        color: #e5e5e5;\r\n        font-size: 0.9rem;  \r\n        padding: 0 5px;\r\n        border-radius: 4px;\r\n        &:hover { \r\n            box-shadow: 0px 0px 7px rgb(255 255 255 / 100%); \r\n\r\n        }\r\n    }\r\n`;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as watchActions from '../../../actions/watchActions';\r\nimport { img_300, noPicture } from '../../../config/config';\r\nimport { CastWrapper, CastContent, CastHeader, CastItem, CastItemImg, CastItemName, CastImg, MoreCast } from './Cast.styles';\r\n// import AliceCast from 'react-alice-Cast';\r\n\r\nconst handleDragStart = (e) => e.preventDefault();\r\n\r\nconst Cast = ({ id, mediaType, match, showAllCast }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const castData = useSelector(state => state.watch.castData);\r\n    // \r\n    useEffect(() => {\r\n        if (id && mediaType) {\r\n            dispatch(watchActions.fetchCast(mediaType, id));\r\n        }\r\n    }, [dispatch, mediaType, id]);\r\n    // \r\n    const renderCast = () => {\r\n        let items = 'Updating...';\r\n        if (castData.length > 0) {\r\n            if (!showAllCast) {\r\n                items = castData?.map((c, index) => {\r\n                    return index < 10 && (\r\n                        <CastItem to={`/actor/${c.id}`} key={c.id}>\r\n                            <CastItemImg>\r\n                                <CastImg\r\n                                    src={c.profile_path ? `${img_300}/${c.profile_path}` : noPicture}\r\n                                    alt={c?.name}\r\n                                    onDragStart={handleDragStart}\r\n                                    title={c?.name}\r\n                                />\r\n                            </CastItemImg>\r\n                            <CastItemName>{c?.name}</CastItemName>\r\n                        </CastItem>\r\n                    )\r\n                });\r\n            } else {\r\n                items = castData?.map((c) => {\r\n                    return (\r\n                        <CastItem to={`/actor/${c.id}`} key={c.id} >\r\n                            <CastItemImg  >\r\n                                <CastImg\r\n                                    src={c.profile_path ? `${img_300}/${c.profile_path}` : noPicture}\r\n                                    alt={c?.name}\r\n                                    onDragStart={handleDragStart}\r\n                                    title={c?.name}\r\n                                />\r\n                            </CastItemImg>\r\n                            <CastItemName>{c?.name}</CastItemName>\r\n                        </CastItem>\r\n                    )\r\n                });\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <CastWrapper> \r\n            <CastHeader>\r\n                <strong>CAST:</strong>\r\n                {\r\n                    castData && castData.length > 9 &&\r\n                    !showAllCast &&\r\n                    <MoreCast>\r\n                        <Link to={`${match.url + '/cast-list'}`}>\r\n                        Cast list ➜\r\n                        </Link>\r\n                    </MoreCast>\r\n                }\r\n            </CastHeader>\r\n\r\n\r\n            <CastContent style={{color: '#FFF'}}>\r\n                {\r\n                    renderCast()\r\n                }\r\n\r\n            </CastContent>\r\n\r\n        </CastWrapper >\r\n    )\r\n}\r\n\r\nexport default Cast\r\n","\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const AvatarContainer = styled.div` \r\n    width: 100%;\r\n    display: block; \r\n`;\r\nexport const Poster = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    max-width: 370px;\r\n    max-height: 500px;\r\n    box-shadow: 0px 7px 15px rgba(0, 0, 0, 0.7);\r\n    @media screen and (max-width: 960px) {\r\n        margin: auto; \r\n    }\r\n    \r\n`;\r\nexport const PosterItemContainer = styled.ul`\r\n    display: flex; \r\n    margin-top: 20px; \r\n    width:300px; \r\n    overflow: auto; \r\n    list-style: none;\r\n    padding: 5px 5px 10px;   \r\n     /* width */\r\n    ::-webkit-scrollbar {  height: 5px;  } \r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        box-shadow: inset 0 0 3px rgba(255, 255, 255, 0.5); \r\n        border-radius: 4px;\r\n    } \r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #3c4a83; \r\n        border-radius: 4px;\r\n    } \r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover { background: #0EBAC0; }\r\n`;\r\n\r\nexport const PosterItem = styled.li`\r\n    width: 50px;\r\n    min-width: 50px;\r\n    height: 70px;\r\n    margin-right: 10px;\r\n    border-radius: 4px;\r\n    overflow: hidden; \r\n\r\n    ${props => props.Active === 'true' && css`\r\n        box-shadow: 0px 0px 5px rgba(18, 200, 206, 0.9);  \r\n    `}\r\n    &:hover {\r\n        box-shadow: 0px 0px 5px rgba(255, 255, 255, 0.7); \r\n    }\r\n`;\r\nexport const PosterItemImg = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n`;\r\n\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { img_300, unavailable } from '../../config/config';\r\nimport { Poster, PosterItem, PosterItemContainer, PosterItemImg, AvatarContainer } from './Avatar.styles';\r\n\r\nconst Avatar = ({ imagePath, imageTitle, ActorID }) => {\r\n    const [url, setUrl] = useState(imagePath);\r\n    const [images, setImages] = useState([]); \r\n \r\n    const setPosterUrl = (posterUrl) => {\r\n        setUrl(posterUrl);\r\n    }\r\n    // \r\n    const getImages = async () => {\r\n        const url = `https://api.themoviedb.org/3/person/${ActorID}/images?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setImages(data.profiles);\r\n    }; \r\n    \r\n    useEffect(() => {\r\n        if (ActorID) {\r\n            getImages();\r\n        }\r\n        return () => { \r\n            setUrl(null);\r\n        }\r\n    }, [ActorID]) // eslint-disable-line react-hooks/exhaustive-deps\r\n    return (\r\n        <AvatarContainer>\r\n            <Poster\r\n                src={`${url !== null ? img_300 + url : unavailable}`}\r\n                alt={imageTitle}\r\n                title={imageTitle}\r\n            />\r\n            {\r\n                ActorID && (\r\n                    <PosterItemContainer>\r\n\r\n                        {\r\n                            images.length > 0 && images.map(image => {\r\n                                return (\r\n                                    <PosterItem \r\n                                        Active={url === image.file_path ? 'true' : 'false'}\r\n                                        key={image.file_path} \r\n                                        onClick={() => setPosterUrl(image.file_path)}\r\n                                    >\r\n                                        <PosterItemImg\r\n                                            src={`https://image.tmdb.org/t/p/w220_and_h330_face${image.file_path}`}\r\n                                        />\r\n                                    </PosterItem>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </PosterItemContainer>\r\n                )\r\n            }\r\n        </AvatarContainer>\r\n    )\r\n}\r\n\r\nexport default Avatar\r\n"," \r\nimport styled from \"styled-components\";\r\n\r\nexport const WatchControl = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex; \r\n    flex-direction: column; \r\n    padding-right: 20px;\r\n    @media screen and (max-width: 960px) {\r\n        padding-right: 0px;\r\n    }\r\n    \r\n`;\r\n\r\n\r\nexport const Button = styled.a` \r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 1.2rem;\r\n    justify-content: center;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    border: 1.5px solid  ${({ color }) => color};\r\n    color:  ${({ color }) => (color ? color : '#0bc6c0')};\r\n    padding: 5px 20px 8px;\r\n    margin: 20px 0;\r\n    border-radius: 4px;\r\n    font-weight: 600;\r\n    &:hover {\r\n        box-shadow: 0 0 7px ${({ color }) => color};\r\n        text-shadow: 0 0 2px ${({ color }) => color};\r\n    }\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { Button, WatchControl } from './WatchControl.styles';\r\nimport PlayCircleFilledRoundedIcon from '@material-ui/icons/PlayCircleFilledRounded';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport * as collectionActions from '../../../actions/collectionActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst WatchControls = ({ playMovie, data, type, keyList }) => {\r\n    const [collected, setCollected] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const collection = useSelector(state => state.collections.collectionData);\r\n\r\n    useEffect(() => {\r\n        if (localStorage && localStorage.getItem('collection')) {\r\n            dispatch(collectionActions.addCollection(JSON.parse(localStorage.getItem('collection'))));\r\n        }\r\n    }, [localStorage.getItem('collection')]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onPlayMovie = (e) => {\r\n        e.preventDefault();\r\n        playMovie(true);\r\n    }\r\n    const onAddCollection = (e) => {\r\n        e.preventDefault();\r\n        const newCollection = [...collection];\r\n        const currentMovie = {\r\n            id: data.id,\r\n            media_type: type,\r\n            poster_path: data.poster_path,\r\n            title: data.title || null,\r\n            name: data.name || null,\r\n            vote_average: data.vote_average,\r\n            popularity: data.popularity,\r\n            release_date: data.release_date || null,\r\n            first_air_date: data.first_air_date || null\r\n        }\r\n        newCollection.push(currentMovie);\r\n        localStorage.setItem('collection', JSON.stringify(newCollection));\r\n        setCollected(true);\r\n    }\r\n\r\n\r\n    const renderButtonAddCollection = () => {\r\n        let xhtml = null;\r\n        if (collection || collection.length > 0) {\r\n            let curentMovie = collection.filter(x => x.id === data.id);\r\n            if (curentMovie.length > 0 || collected) {\r\n                xhtml = (\r\n                    <Button to='/' color={'#52ce69'} onClick={(e) => { e.preventDefault() }} >\r\n                        <DoneIcon /> &nbsp;collected\r\n                    </Button>\r\n                )\r\n            } else if (!collected) {\r\n                xhtml = (\r\n                    <Button to='/' color={'#52ce69'} onClick={onAddCollection} >\r\n                        <AddIcon /> &nbsp;Add collection\r\n                    </Button >\r\n                )\r\n            }\r\n        } else {\r\n            xhtml = (\r\n                <Button href='/' color={'#52ce69'} onClick={onAddCollection} >\r\n                    <AddIcon /> &nbsp;Add collection\r\n                </Button >\r\n            )\r\n        }\r\n        return xhtml;\r\n    }\r\n\r\n    return (\r\n        <WatchControl>\r\n            <Button href='/' color={'#febb13'} onClick={onPlayMovie}>\r\n                <PlayCircleFilledRoundedIcon /> &nbsp;Watch\r\n            </Button>\r\n            {renderButtonAddCollection()}\r\n            <Button\r\n                href={`https://www.facebook.com/sharer/sharer.php?u=https://www.youtube.com/watch?v=${keyList[0]}`}\r\n                target=\"_blank\"\r\n                color={'#0bc6c0'}\r\n            >\r\n                <ShareIcon /> &nbsp;Share\r\n            </Button>\r\n        </WatchControl>\r\n    )\r\n}\r\n\r\nexport default WatchControls\r\n","import styled, { css } from 'styled-components';\r\n\r\n\r\n// const letterSpacing = '1px';\r\n\r\nexport const Backdrop =styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 400px;\r\n    overflow: hidden;\r\n`;\r\nexport const BackdropImg =styled.img`\r\n    display: block;\r\n    width:  100%;\r\n`;\r\nexport const MovieTitle = styled.h1`\r\n    font-size: 2rem;\r\n    color: #febb13;\r\n`;\r\nexport const OriginalTitle = styled.h3`\r\n    color: #e5e5e5;\r\n    font-size: 1.3rem; \r\n`;\r\n \r\nexport const VoteAverage = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    margin: 10px 0;\r\n`;\r\nexport const VoteCount = styled.p`\r\n    color: #e5e5e5;  \r\n    margin-left: 5px;\r\n    @media screen and (max-width: 400px) {\r\n        margin-left: 0; \r\n    }\r\n    \r\n`;\r\nexport const Overview = styled.div`\r\n    color: #e5e5e5; \r\n    font-family: 'Be Vietnam', sans-serif;\r\n    text-align: justify; \r\n`;\r\n\r\nexport const MoreInfo = styled.ul`\r\n    list-style: none;\r\n`;\r\nexport const InfoItem = styled.li`\r\n        margin: 10px 0;\r\n        color: #e1e1e1;\r\n        display: flex;  \r\n        & > span { \r\n            margin-right: 5px;\r\n            color: #c6c6c6;\r\n        }\r\n        & > b, a {\r\n            font-size: 13px;\r\n            padding: 0 5px;  \r\n            display: flex;\r\n            align-items: center;\r\n            text-decoration: none;\r\n            margin: 2px;\r\n            color: #e5e5e5; \r\n            font-family: 'Source Sans Pro', sans-serif;\r\n        }\r\n        ${props => props.label === 'type' && css`\r\n            & > a { \r\n                font-weight: normal;\r\n                background-color: #068254;  \r\n                box-shadow: 1px 3px 3px rgb(0 0 0 / 50%),\r\n                    inset 1px -1px 3px rgb(0 0 0 / 50%), \r\n                    inset 0 1px 3px rgb(0 0 0 / 20%);\r\n            }\r\n        `} \r\n        ${props => props.label === 'genre' && css`\r\n            flex-flow: row wrap;\r\n            & > a { \r\n                background-color: #a11111; \r\n                box-shadow: 1px 3px 3px rgb(0 0 0 / 50%),\r\n                    inset 1px -1px 3px rgb(0 0 0 / 50%), \r\n                    inset 0 1px 3px rgb(0 0 0 / 20%); \r\n                    \r\n        }\r\n        `}\r\n     \r\n`;\r\n"," \r\nimport styled from \"styled-components\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport const ModalWrapper = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: rgba(0,0,0, 0.5);\r\n    z-index: 99999; \r\n`;\r\nexport const ModalContainer = styled.div`\r\n    width: 100%;  \r\n    max-width: 1000px;\r\n    height: 100%;\r\n    max-height: 600px;  \r\n    @media screen and (max-width: 960px) {\r\n        width: 80%;   \r\n        max-height: 500px;  \r\n    } \r\n    @media screen and (max-width: 700px) {\r\n        width: 90%;   \r\n    }\r\n    @media screen and (max-width: 500px) {\r\n        max-height: 400px;   \r\n    }\r\n`;\r\n\r\nexport const ModalContent = styled.div`   \r\n    margin: 20px;\r\n    & > iframe { \r\n        width: 100%;\r\n        min-height: 500px; \r\n        @media screen and (max-width: 960px) {\r\n            min-height: 400px;  \r\n        }\r\n        @media screen and (max-width: 500px) {\r\n            min-height: 300px;   \r\n        }\r\n   }\r\n `;\r\n\r\nexport const ModalHeader = styled.div`\r\n    text-align: end; \r\n `;\r\n\r\nexport const CloseModal = styled(CloseIcon)`\r\n    color: #e5e5e5;\r\n    font-size: 2rem !important;\r\n `;"," \r\nimport { ModalContent, ModalContainer, ModalWrapper, ModalHeader, CloseModal } from './ModalTrailer.styles';\r\n\r\nconst ModalTrailer = ({ setVideoKey, videoKey }) => {\r\n\r\n    const onCloseModal = () => {\r\n        setVideoKey(\"\");\r\n    }\r\n    return (\r\n        <ModalWrapper onClick={onCloseModal}>\r\n            <ModalContainer>\r\n                <ModalHeader>\r\n                    <CloseModal onClick={onCloseModal} />\r\n                </ModalHeader>\r\n                <ModalContent>\r\n                    <iframe\r\n                        title=\"video\"\r\n                        src={`https://www.youtube.com/embed/${videoKey}?autoplay=1`}\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen=\"\"\r\n                    ></iframe>\r\n                </ModalContent>\r\n            </ModalContainer>\r\n        </ModalWrapper>\r\n    )\r\n}\r\n\r\nexport default ModalTrailer\r\n","import styled from \"styled-components\"; \r\n\r\nexport const TrailerContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;  \r\n    & > p {\r\n        margin-bottom: 10px;\r\n        color: #e5e5e5;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n    }\r\n    .slick-list {margin: 0 -10px;}\r\n    .slick-slide>div {padding: 0 10px;}\r\n     \r\n`;\r\n\r\nexport const CarouselItem = styled.div`  \r\n    position: relative;\r\n    & > img {\r\n        display: block;\r\n        width: 100%; \r\n        height: 150px;\r\n        object-fit: fill; \r\n        border-radius: 4px;\r\n        margin-bottom: 5px;\r\n        box-shadow: 0px 0px 5px rgba(0,0,0, 0.7);\r\n    }\r\n    &:hover {\r\n        &::before {\r\n            content: \"◁\";\r\n            color: #FFF;\r\n            background-color: rgba(0,0,0, 0.7);\r\n            width: 100%;\r\n            height: 98%; \r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            font-size: 2.5rem;\r\n        }\r\n    }\r\n `;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport ModalTrailer from '../ModalTrailer/ModalTrailer';\r\nimport { CarouselItem, TrailerContainer } from './Trailer.styles';\r\n\r\nconst Trailer = ({ id, mediaType }) => {\r\n    const [trailers, setTrailers] = useState([]); \r\n    const [videoKey, setVideoKey] = useState(\"\");\r\n \r\n    const getTrailer = async () => {\r\n        const url = `https://api.themoviedb.org/3/${mediaType}/${id}/videos?api_key=${process.env.REACT_APP_MOVIE_API_KEY}`;\r\n        const { data } = await axios.get(url);\r\n        setTrailers(data.results);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        getTrailer();  \r\n        return () => {\r\n            setTrailers([]);  \r\n        }\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n    // \r\n    \r\n    const settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1,\r\n        swipeToSlide: true,\r\n        pauseOnHover: true,\r\n        autoplay: true,\r\n        autoplaySpeed: 3000,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1980,\r\n                settings: {\r\n                    slidesToShow: 5,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    arrows: false,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    const renderItems = () => {\r\n        let items = null;\r\n        items = trailers.map((video) => (\r\n            <CarouselItem \r\n                key={video.key} \r\n                onClick={() => setVideoKey(video.key)} \r\n            >\r\n                <img \r\n                    src={`https://img.youtube.com/vi/${video.key}/mqdefault.jpg`}\r\n                    alt=\"\"\r\n                />\r\n            </CarouselItem>\r\n        ));\r\n        return items;\r\n    }\r\n    // \r\n\r\n    return (\r\n        <TrailerContainer>\r\n            <p>Trailer:</p>\r\n            <Slider {...settings}>\r\n                {renderItems()}\r\n            </Slider>\r\n            {\r\n                videoKey !== '' && (\r\n                    <ModalTrailer \r\n                        videoKey={videoKey}\r\n                        setVideoKey={setVideoKey}\r\n                />\r\n                )\r\n            }\r\n        </TrailerContainer>\r\n    )\r\n}\r\n\r\nexport default Trailer\r\n","\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const Iframe = styled.iframe`\r\n    width: 100%;\r\n    height: 600px;\r\n    @media screen and (max-width: 960px) {\r\n        height: 500px;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        height: 400px;\r\n    }\r\n    @media screen and (max-width: 500px) {\r\n        height: 250px;\r\n    }\r\n    \r\n\r\n`;\r\nexport const InfoRow = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n`;\r\nexport const InfoName = styled.h2`\r\n    color: #FEAB1D; \r\n    margin-bottom: 10px;\r\n    margin-right: 10px;\r\n`;\r\n\r\nexport const Button = styled.a`\r\n    color: #e5e5e5;\r\n    text-decoration: none;    \r\n    margin-right:  ${({ Color }) => (Color ? \" \" : \"10px\")};\r\n    margin-left: ${({ Color }) => (Color ? \" \" : \"auto\")};\r\n    padding: 0 5px;\r\n    border-radius: 4px;  \r\n    display: flex;\r\n    align-items: center;\r\n    box-shadow: 0px 0px 3px rgb(255 255 255 / 50%);\r\n    &:hover{\r\n        box-shadow: 0px 0px 7px rgb(255 255 255 / 100%);\r\n    }\r\n    & > span {\r\n        margin-left: 5px;\r\n        color: ${({ Color }) => (Color ? Color : '#0ebac0')};\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        margin-right:  ${({ Color }) => (Color ? \"auto\" : \"10px\")};  \r\n        margin-left: 0; \r\n    }\r\n    \r\n`;\r\n\r\n","import React, { Fragment } from 'react' \r\nimport { Grid } from '@material-ui/core';\r\nimport {  InfoName, InfoRow, Button, Iframe } from './Play.styles';\r\n\r\nconst Play = ({ trailer }) => {\r\n    const keyList = trailer.reduce((acc, item) => {\r\n        if (item.type === \"Trailer\") {\r\n            acc.push(item.key);\r\n        }\r\n        return acc;\r\n    }, []);\r\n\r\n    const nameList = trailer.reduce((acc, item) => {\r\n        if (item.type === \"Trailer\") {\r\n            acc.push(item.name);\r\n        }\r\n        return acc;\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                trailer.length > 0 &&\r\n                    <Grid container spacing={2}>\r\n                        <Grid item md={12} xs={12}>\r\n                            <Iframe\r\n                                title=\"video\"\r\n                                width=\"100%\"\r\n                                height=\"600\"\r\n                                src={`https://www.youtube.com/embed/${keyList[0]}?autoplay=1`}\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen=\"\"\r\n                            ></Iframe>\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12}>\r\n                            <InfoRow> \r\n                                    <InfoName>\r\n                                        {nameList[0]}\r\n                                    </InfoName>  \r\n                                    <Button\r\n                                        href={`https://www.facebook.com/sharer/sharer.php?u=https://www.youtube.com/watch?v=${keyList[0]}`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Share <span>⤴</span>\r\n                                    </Button> \r\n                                    <Button Color=\"#c2210c\">\r\n                                        Report <span>!</span>\r\n                                    </Button> \r\n                            </InfoRow>\r\n                        </Grid>\r\n                    </Grid> \r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Play\r\n","\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const CommentWrapper = styled.div`\r\n    width: 100%; \r\n        & > p {\r\n            color: #feab1d;\r\n            text-transform: uppercase;\r\n        }\r\n    `;\r\n\r\nexport const CommentContent = styled.div`\r\n    max-width: 700px; \r\n    margin-top: 50px; \r\n    padding: 0 10px 5px 10px;\r\n    \r\n    border-radius: 5px;\r\n    box-shadow: 0 0 2px rgba(100, 100, 100, 0.5);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n   color: #e3e3e3;  \r\n   margin-bottom: 10px; \r\n`;\r\nexport const Info = styled.p`\r\n    display: inline-block;\r\n    background-color: #11112C;  \r\n    transform: translate(5px,-15px);\r\n    color: #0ebac0;\r\n    font-weight: 600;\r\n`;\r\nexport const Time = styled.p`\r\n    width: 100%;\r\n    text-align: end;\r\n    color: #b7b5b5; \r\n`;\r\nexport const CommentControl = styled.form`\r\n    margin-top: 10px;\r\n    max-width: 700px; \r\n`;\r\nexport const CommentInput = styled.textarea`\r\n    width: 100%; \r\n    border-radius: 5px;  \r\n    color: #e5e5e5; \r\n    padding: 10px;\r\n    background-color: transparent; \r\n    &:focus {\r\n       outline: none;\r\n    }\r\n`;\r\nexport const Control = styled.div`\r\n    width: 100%;\r\n    text-align: end;\r\n`;\r\nexport const Button = styled.button`\r\n     padding: 0 5px;\r\n     border: none; \r\n     cursor: pointer;\r\n     color: #111111; \r\n     font-weight: 600;\r\n     background-color: #feab1d;\r\n     border: 1px solid transparent;\r\n\r\n     &:hover {\r\n        background-color: transparent;\r\n        color: #feab1d;  \r\n        border: 1px solid #feab1d;\r\n     }\r\n`;\r\n","\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useEffect, useState } from 'react';\r\nimport { CommentContent, CommentWrapper, Content, Info, Time, CommentControl, CommentInput, Control, Button } from './Comment.styles';\r\n\r\n\r\nconst Comment = ({ id }) => {\r\n    const [currentComment, setCurrentComment] = useState(\"\");\r\n    const [commentList, setCommentList] = useState([]);\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        const hour = date.getHours();\r\n        const minute = date.getMinutes();\r\n        const dateFormat = `${hour}:${minute} ${day}/${month}/${year}`;\r\n        let comment = \r\n            {\r\n                id: uuidv4(),\r\n                idMovie: id,\r\n                content: currentComment,\r\n                time: dateFormat\r\n            }\r\n        let newComment = [...commentList];\r\n        newComment.push(comment);\r\n        setCommentList(newComment);\r\n        setCurrentComment(\"\");\r\n        localStorage.setItem('comment', JSON.stringify(newComment)); \r\n    }\r\n    useEffect(() => {\r\n        if (localStorage && localStorage.getItem('comment')) {\r\n            setCommentList(JSON.parse(localStorage.getItem('comment')));\r\n        }\r\n    }, []);\r\n\r\n    const renderComment = () => {\r\n        if (commentList.length > 0) {\r\n            let xhtml = null;\r\n            let commentOfMovie = commentList.filter(x => x.idMovie === id);\r\n            xhtml = commentOfMovie?.map(x => {\r\n                return (\r\n                    <CommentContent key={x.id}>\r\n                        <Info>\r\n                        Incognito\r\n                        </Info>\r\n                        <Content>\r\n                            {x.content}\r\n                        </Content>\r\n                        <Time>\r\n                            {x.time}\r\n                        </Time>\r\n                    </CommentContent>\r\n                )\r\n            })\r\n            return xhtml;\r\n        }\r\n    }\r\n    return (\r\n        <CommentWrapper>\r\n            <p>Comment</p>\r\n            <CommentControl onSubmit={(e) => onSubmitForm(e)}>\r\n                <CommentInput\r\n                    placeholder=\"Enter your comment\"\r\n                    value={currentComment}\r\n                    onChange={(e) => setCurrentComment(e.target.value)}\r\n                />\r\n                <Control>\r\n                    <Button type=\"submit\" >Send</Button>\r\n                </Control>\r\n            </CommentControl>\r\n            {\r\n                renderComment()\r\n            }\r\n\r\n        </CommentWrapper>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","\r\nimport { Grid } from '@material-ui/core';\r\nimport LocalOfferOutlinedIcon from '@material-ui/icons/LocalOfferOutlined';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport StarRatings from 'react-star-ratings';\r\nimport * as watchActions from '../../actions/watchActions';\r\nimport Cast from '../../components/Watch/Cast/Cast';\r\nimport Avatar from '../../components/Avatar/Avatar';\r\nimport WatchControls from '../../components/Watch/WatchControls/WatchControls';\r\nimport { Content, Title } from '../../globalStyles';\r\nimport { InfoItem, MoreInfo, MovieTitle, OriginalTitle, Overview, VoteAverage, VoteCount } from './Watch.styles';\r\nimport Trailer from '../../components/Watch/Trailer/Trailer';\r\nimport Play from '../../components/Watch/Play/Play';\r\nimport Comment from '../../components/Watch/Comment/Comment';\r\n\r\nconst Watch = ({ name, match }) => {\r\n    let { type: mediaType, id } = useParams();\r\n    id = id.split(\"-\").slice(-1)[0];\r\n    //  \r\n    const [playMovie, setPlayMovie] = useState(false);\r\n    const [trailer, setTrailer] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const infoData = useSelector(state => state.watch.infoData);\r\n    //   \r\n    useEffect(() => {\r\n        dispatch(watchActions.fetchInfo(mediaType, id));\r\n    }, [dispatch, mediaType, id]);\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(watchActions.fetchInfo(null, null));\r\n        };\r\n    }, [dispatch]);\r\n    // get trailer\r\n    const getTrailer = async () => {\r\n        const url = `https://api.themoviedb.org/3/${mediaType}/${id}/videos?api_key=${process.env.REACT_APP_MOVIE_API_KEY}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        const trailerList = data.results;\r\n        setTrailer(trailerList);\r\n    };\r\n    useEffect(() => {\r\n        getTrailer(); // eslint-disable-next-line\r\n    }, []);\r\n    const keyList = trailer.reduce((acc, item) => {\r\n        if (item.type === \"Trailer\") {\r\n            acc.push(item.key);\r\n        }\r\n        return acc;\r\n    }, []);\r\n    // \r\n    // renderStatus\r\n    // const renderStatus = (status) => {\r\n    //     let result = '';\r\n    //     switch (status) {\r\n    //         case 'Released':\r\n    //             result = 'Đã phát hành';\r\n    //             break;\r\n    //         case 'Ended':\r\n    //             result = 'Đã kết thúc';\r\n    //             break;\r\n    //         case 'Returning Series':\r\n    //             result = 'Returning Series';\r\n    //             break;\r\n    //         default:\r\n    //             result = status;\r\n    //             break;\r\n    //     }\r\n    //     return result;\r\n    // } \r\n    const convertDate = (date) => {\r\n        if (date) return date.split(\"-\").reverse().join('-');\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Title>{name}</Title>\r\n            <Content>\r\n                {\r\n                    infoData && playMovie && (\r\n                        <>\r\n                            <span\r\n                                style={{color: '#FFF', cursor: 'pointer'}}\r\n                                onClick={() => { setPlayMovie(false) }}\r\n                            >\r\n                                ⇽ Back\r\n                            </span>\r\n                            <Play trailer={trailer} />\r\n                        </>\r\n\r\n                    )\r\n                }\r\n                {/* <Backdrop>\r\n                    <BackdropImg\r\n                        src={\r\n                            infoData?.backdrop_path\r\n                                ? `${img_500}/${infoData.backdrop_path}`\r\n                                : unavailableLandscape\r\n                        }\r\n                        alt={infoData?.name || infoData?.title}\r\n                    />\r\n                </Backdrop> */}\r\n                {\r\n                    infoData && !playMovie ?\r\n                        <Grid container spacing={2}>\r\n                            <Grid item md={4} xs={12}  >\r\n                                <Avatar\r\n                                    imagePath={infoData.poster_path}\r\n                                    imageTitle={infoData.original_title}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={8} xs={12}>\r\n                                <MovieTitle>{infoData.title || infoData.name}</MovieTitle>\r\n                                {\r\n                                    // infoData.tagline === \"\" || infoData.tagline === infoData.title || infoData.tagline !== infoData.name ?\r\n                                    //     (\r\n                                    //         infoData.original_title &&\r\n                                    //             infoData.original_title !== infoData.title ?\r\n                                    //             (\r\n                                    //                 <OriginalTitle>{infoData.original_title}</OriginalTitle>\r\n                                    //             ) :\r\n                                    //             infoData.original_name &&\r\n                                    //             infoData.original_name !== infoData.name &&\r\n                                    //             (\r\n                                    //                 <OriginalTitle>{infoData.original_name}</OriginalTitle>\r\n                                    //             )\r\n                                    //     ) :\r\n                                    <OriginalTitle> {infoData.tagline} </OriginalTitle>\r\n                                }\r\n                                <VoteAverage>\r\n                                    <StarRatings\r\n                                        numberOfStars={10}\r\n                                        starRatedColor=\"#C2210C\"\r\n                                        rating={infoData.vote_average}\r\n                                        starDimension=\"16px\"\r\n                                        starSpacing=\"2px\"\r\n                                    />\r\n                                    <VoteCount>\r\n                                        {`(${infoData.vote_average} point / ${infoData.vote_count} vote)`}\r\n                                    </VoteCount>\r\n                                </VoteAverage>\r\n                                <Overview>\r\n                                    <p>{infoData.overview}</p>\r\n                                </Overview>\r\n                                {/*  */}\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item md={5} xs={12}>\r\n                                        <WatchControls\r\n                                            match={match}\r\n                                            data={infoData}\r\n                                            playMovie={setPlayMovie}\r\n                                            type={mediaType}\r\n                                            url={match.url}\r\n                                            keyList={keyList}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={7} xs={12} >\r\n                                        <MoreInfo>\r\n                                            <InfoItem label={'type'}>\r\n                                                <span>Type: </span>\r\n                                                <Link to='/'>{mediaType === 'tv' ? 'Tv series' : 'Movie'}</Link>\r\n                                            </InfoItem>\r\n                                            {\r\n                                                infoData.number_of_episodes && (\r\n                                                    <InfoItem label={'type'}>\r\n                                                        <span>Number of Episodes: </span>\r\n                                                        <p>\r\n                                                            {infoData.number_of_episodes}\r\n                                                            {infoData.number_of_seasons > 0 &&\r\n                                                                (\r\n                                                                    ' per ' + infoData.number_of_seasons + ' part '\r\n                                                                )\r\n                                                            }\r\n                                                        </p>\r\n                                                    </InfoItem>\r\n                                                )\r\n                                            }\r\n                                            <InfoItem>\r\n                                                <span>Runtime: </span>\r\n                                                <p>\r\n                                                    {\r\n                                                        infoData.runtime ? Math.floor(infoData.runtime / 60) + \" hour \" + infoData.runtime % 60 + \" minutes\"\r\n                                                            :\r\n                                                            infoData.episode_run_time && (\r\n                                                                infoData.episode_run_time.map((c, index) => {\r\n                                                                    return (index ? ' ' : '') + Math.floor(c / 60) === \"0\" ? c % 60 + \" minutes\" : + Math.floor(c / 60) + \" hour \" + c % 60 + \" minutes\"\r\n                                                                })\r\n                                                            ) + ' / episode'\r\n                                                    }\r\n                                                </p>\r\n                                            </InfoItem>\r\n                                            {\r\n                                                infoData.created_by &&\r\n                                                (\r\n                                                    <InfoItem>\r\n                                                        <span>Director: </span>\r\n                                                        <p>\r\n                                                            {\r\n                                                                infoData.created_by.length > 0 ?\r\n                                                                    infoData.created_by.map((c, index) => {\r\n                                                                        return (index ? ', ' : '') + c.name\r\n                                                                    })\r\n                                                                    : 'Updating...'\r\n                                                            }\r\n                                                        </p>\r\n                                                    </InfoItem>\r\n                                                )\r\n                                            }\r\n                                            <InfoItem>\r\n                                                <span>Country: </span>\r\n                                                <p>\r\n                                                    {\r\n                                                        infoData.production_countries &&\r\n                                                        infoData.production_countries.map((c, index) => {\r\n                                                            return (index ? ', ' : '') + c.name\r\n                                                        })\r\n                                                    }\r\n                                                </p>\r\n                                            </InfoItem>\r\n                                            <InfoItem>\r\n                                                <span>\r\n                                                    {\r\n                                                        infoData.release_date ?\r\n                                                            'Release date: ' : 'First air date: '\r\n                                                    }\r\n                                                </span>\r\n                                                <p>\r\n                                                    {\r\n                                                        convertDate(infoData.release_date) ||\r\n                                                        convertDate(infoData.first_air_date)\r\n                                                    }\r\n                                                </p>\r\n                                            </InfoItem>\r\n                                            <InfoItem label={'genre'}>\r\n                                                <span>Genre: </span>\r\n                                                {\r\n                                                    infoData.genres && infoData.genres.map((g) => {\r\n                                                        return (\r\n                                                            <Link to=\"/#\" key={g.id} >\r\n                                                                <LocalOfferOutlinedIcon style={{ fontSize: '11px', marginRight: 2 }} />\r\n                                                                {g.name}\r\n                                                            </Link>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </InfoItem>\r\n                                        </MoreInfo>\r\n                                    </Grid>\r\n                                    <Grid item md={12} sm={12}>\r\n                                        <Cast\r\n                                            id={id}\r\n                                            mediaType={mediaType}\r\n                                            match={match}\r\n                                            showAllCast={false}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        : null\r\n                }\r\n                {\r\n                    infoData && !playMovie && (\r\n                        <Trailer\r\n                            id={id}\r\n                            mediaType={mediaType}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    infoData && (\r\n                        <Comment id={id} />\r\n                    )\r\n                }\r\n            </Content>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Watch;\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'; \r\nimport { useParams } from 'react-router'; \r\nimport * as watchActions from '../../actions/watchActions'; \r\nimport Avatar from '../../components/Avatar/Avatar';\r\n\r\nimport { Content, Title } from '../../globalStyles';\r\nimport { Grid } from '@material-ui/core'; \r\nimport Cast from '../../components/Watch/Cast/Cast';\r\n\r\nconst CastList = ({ name, match }) => {\r\n    let { id, type: mediaType } = useParams();\r\n    id = id.split(\"-\").slice(-1)[0];\r\n\r\n    const dispatch = useDispatch();\r\n    const infoData = useSelector(state => state.watch.infoData);\r\n \r\n    // \r\n    useEffect(() => {\r\n        dispatch(watchActions.fetchInfo(mediaType, id));\r\n    }, [dispatch, mediaType, id]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Title>{name}</Title>\r\n            <Content>\r\n                {\r\n                    infoData ?\r\n                        <Grid container spacing={3}>\r\n                            <Grid item md={4} sm={12} >\r\n                                <Avatar\r\n                                    imagePath={infoData.poster_path}\r\n                                    imageTitle={infoData.original_title}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item md={8} sm={12}>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <Cast\r\n                                        id={id}\r\n                                        mediaType={mediaType}\r\n                                        match={match}\r\n                                        showAllCast={true}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item md={12} sm={12}> \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        : null\r\n                }\r\n            </Content>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CastList\r\n","export const FETCH_ACTOR_INFO = 'FETCH_ACTOR_INFO';\r\nexport const FETCH_ACTOR_INFO_SUCCESS = 'FETCH_ACTOR_INFO_SUCCESS';\r\nexport const FETCH_ACTOR_INFO_FAILED = 'FETCH_ACTOR_INFO_FAILED';\r\n\r\n ","import styled from \"styled-components\";\r\n\r\nexport const ActorName = styled.h1`\r\n     color: #febb01;\r\n`;\r\n\r\nexport const Biography = styled.div`\r\n    color: #e5e5e5;\r\n    text-align: justify;\r\n    max-height: 200px;\r\n    overflow: auto;\r\n    padding-right: 10px;\r\n    /* width */\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n    } \r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        box-shadow: inset 0 0 3px rgba(255, 255, 255, 0.5); \r\n        border-radius: 4px;\r\n    } \r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #FEBB01; \r\n        border-radius: 4px;\r\n    } \r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #0EBAC0; \r\n    }\r\n    & > p {   \r\n        display: inline-block;\r\n        padding:  0 5px;\r\n        font-family: 'Source Sans Pro',sans-serif;\r\n        margin-right: 5px;\r\n        border-radius: 4px;\r\n        background-color: #a11111;\r\n        box-shadow: 1px 3px 3px rgb(0 0 0 / 50%), \r\n            inset 1px -1px 3px rgb(0 0 0 / 50%), \r\n            inset 0 1px 3px rgb(0 0 0 / 20%); \r\n   }\r\n`;\r\n\r\nexport const ActorInfo = styled.ul`\r\n   margin: 20px 0;\r\n`;\r\nexport const ActorInfoItem = styled.li`\r\n    list-style: none;\r\n    color: #c6c6c6;\r\n    margin: 10px 0;\r\n    & > span {\r\n        color: #e5e5e5;\r\n        margin-left: 5px;\r\n    }\r\n`;\r\n\r\n","\r\nimport React, { Fragment } from 'react';\r\nimport { ActorInfo, ActorInfoItem, ActorName, Biography } from './ActorDetail.styles';\r\n\r\nconst ActorDetail = ({ ActorData }) => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <ActorName>{ActorData.name}</ActorName>\r\n            <ActorInfo>\r\n                <ActorInfoItem>\r\n                    Gender:\r\n                    <span> {ActorData.gender === '1' ? 'Female' : 'Male'}</span>\r\n                </ActorInfoItem>\r\n                <ActorInfoItem>\r\n                    Birth day:\r\n                    <span> \r\n                        {\r\n                             ActorData.birthday || ' Updating'\r\n                        }\r\n                    </span>\r\n                </ActorInfoItem>\r\n                {\r\n                    ActorData.deathday !== null && (\r\n                        <ActorInfoItem>\r\n                            Death day:\r\n                            <span> {ActorData.deathday}</span>\r\n                        </ActorInfoItem>\r\n                    )\r\n                }\r\n                <ActorInfoItem>\r\n                    Also known as:\r\n                    <span>\r\n                        {\r\n                            ActorData.also_known_as.lenght > 0 ? ActorData.also_known_as.map((x, index) => (index ? ', ' : ' ') + x\r\n                            ) \r\n                            :  'Updating...'\r\n                           \r\n                        }\r\n                    </span>\r\n                </ActorInfoItem>\r\n                <ActorInfoItem>\r\n                    Place of birth:\r\n                    <span> {ActorData.place_of_birth || 'Updating'}</span>\r\n                </ActorInfoItem>\r\n            </ActorInfo>\r\n            {\r\n                ActorData.biography !== '' && (\r\n                    <Biography>\r\n                        <p>Biography:</p>\r\n                        {ActorData.biography}\r\n                    </Biography>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ActorDetail\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.p`\r\n     color: #FEBB01;\r\n     margin-top: 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  width: 100%; \r\n  margin: 20px 0;  \r\n  gap: 25px;   \r\n  height: ${props => props.showAll === false ? '380px' : 'auto'}; \r\n  overflow: ${props => props.showAll === false ? 'hidden' : 'none'}; \r\n`;\r\nexport const ButtonShowAll = styled.button` \r\n  width: 100px;\r\n  padding: 3px 0;\r\n  display: block;\r\n  margin: auto;\r\n  background-color: rgba(11,11,30,.9);\r\n  background: linear-gradient(180deg,#0a0a19 45%,rgba(15,15,40,.8) 75%,rgba(15,15,40,0.5));\r\n  color: #FEBB0E;\r\n  border: none;\r\n  font-weight: 600;\r\n`;","\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { ButtonShowAll, Content, Title } from './MovieCredits.styles';\r\nimport SingleContent from '../../SingleContent/SingleContent';\r\nconst MovieCredits = ({ ActorID }) => {\r\n    const [credits, setCredits] = useState([]);\r\n    const [showAll, setShowAll] = useState(false)\r\n    const getCredits = async () => {\r\n        \r\n        const url = `https://api.themoviedb.org/3/person/${ActorID}/movie_credits?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setCredits(data.cast);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ActorID) {\r\n            getCredits(); \r\n        }\r\n        return () => {\r\n            setCredits([]);\r\n        }\r\n    }, [ActorID ]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onSetShowAll = () => {\r\n        setShowAll(!showAll);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Title>Movies participated: </Title>\r\n            <Content showAll={showAll}>\r\n                {\r\n                    credits && credits.map(item => {\r\n                        return (\r\n                            <SingleContent\r\n                                key={item.id}\r\n                                item={item}\r\n                                media_type={item.media_type === 'tv' ? 'Tv Series' : 'Movie'}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </Content>\r\n            {\r\n                credits && credits.length > 0 && (\r\n                    <ButtonShowAll onClick={onSetShowAll}>\r\n                        {showAll === false ? 'Show All' : 'Show less'}\r\n                    </ButtonShowAll>\r\n                )\r\n            } \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieCredits\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport * as actorActions from '../../actions/actorActions';\r\nimport Avatar from '../../components/Avatar/Avatar';\r\nimport { Content, Title } from '../../globalStyles';\r\nimport { Grid } from '@material-ui/core';\r\nimport ActorDetail from '../../components/Actor/ActorDetail/ActorDetail';\r\nimport MovieCredits from '../../components/Actor/MovieCredits/MovieCredits';\r\n\r\nconst Actor = ({ name }) => {\r\n    let { id } = useParams();\r\n    // \r\n    const dispatch = useDispatch();\r\n    const actorInfo = useSelector(state => state.actor.actorInfo);\r\n\r\n    // \r\n    useEffect(() => {\r\n        dispatch(actorActions.fetchActorInfo(id));\r\n    }, [dispatch, id]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Title>{name}</Title>\r\n            <Content>\r\n                {\r\n                    actorInfo ?\r\n                        <Grid container spacing={3}>\r\n                            <Grid item md={4} sm={12}>\r\n                                <Avatar\r\n                                    imagePath={actorInfo.profile_path}\r\n                                    imageTitle={actorInfo.name}\r\n                                    ActorID={actorInfo.id}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={8} sm={12} >\r\n                                <Grid item md={12} sm={12}>\r\n                                    <ActorDetail\r\n                                        ActorData={actorInfo}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <MovieCredits\r\n                                        ActorID={actorInfo.id}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        : null\r\n                }\r\n            </Content>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Actor\r\n","import * as actorConstants from '../constants/actorConstants';\r\n\r\nexport const fetchActorInfo = (id) => {\r\n    return {\r\n        type: actorConstants.FETCH_ACTOR_INFO,\r\n        payload: { \r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchActorInfoSuccess = data => {\r\n    return {\r\n        type: actorConstants.FETCH_ACTOR_INFO_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchActorInfoFailed = error => {\r\n    return {\r\n        type: actorConstants.FETCH_ACTOR_INFO_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n ","import React, { Fragment } from 'react'\r\n\r\nimport { Content, Title } from '../../globalStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SingleContent from '../../components/SingleContent/SingleContent';\r\nimport * as collectionActions from '../../actions/collectionActions';\r\n\r\nconst Collection = ({ name }) => {\r\n    const collection = useSelector(state => state.collections.collectionData);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDeleteCollection = id => {\r\n         dispatch(collectionActions.deleteCollection(id));\r\n    } \r\n    return (\r\n        <Fragment>\r\n            <Title>{name}</Title>\r\n            <Content>\r\n                {\r\n                    collection && collection.map(item => {\r\n                            return (\r\n                                <SingleContent\r\n                                    key={item.id}\r\n                                    item={item}\r\n                                    media_type={item.media_type === 'tv' ? 'Tv Series' : 'Movie'}\r\n                                    collection={true}\r\n                                    deleteCollection={onDeleteCollection}\r\n                                />\r\n                            );\r\n                        }) \r\n                }\r\n            </Content>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Collection\r\n","import Trending from '../pages/Trending/Trending';\r\nimport Series from '../pages/Series/Series';\r\nimport Search from '../pages/Search/Search';\r\nimport Movies from '../pages/Movies/Movies';\r\nimport Watch from '../pages/Watch/Watch';\r\nimport CastList from '../pages/CastList/CastList';\r\nimport Actor from '../pages/Actor/Actor'; \r\nimport Collection from '../pages/Collection/Collection';\r\n\r\nexport const ROUTES = [\r\n    {\r\n        id: 0,\r\n        exact: true,\r\n        path: '/',\r\n        component: () => <Trending name={'TRENDING TODAY'} />\r\n    },\r\n    {\r\n        id: 1,\r\n        path: '/movies',\r\n        component: () => <Movies name={'DISCOVER MOVIES'} />\r\n    },\r\n    {\r\n        id: 2,\r\n        path: '/series',\r\n        component: () => <Series name={'DISCOVER SERIES'} />\r\n    },\r\n    {\r\n        id: 3,\r\n        path: '/search',\r\n        component: () => <Search name={'SEARCH MOVIES'} />\r\n    },\r\n    {\r\n        id: 4,\r\n        path: '/watch/:type/:id/cast-list',\r\n        component: ({match}) => <CastList name={'CAST LIST'} match={match} />\r\n    },\r\n    \r\n    {\r\n        id: 5,\r\n        path: '/watch/:type/:id',\r\n        component: ({ match }) => <Watch name={'WATCH'} match={match} />\r\n    },\r\n    {\r\n        id: 6,\r\n        path: '/actor/:id',\r\n        component: ({ match }) => <Actor name={'ACTOR INFO'} match={match} />\r\n    },\r\n    {\r\n        id: 7,\r\n        path: '/collection',\r\n        component: () => <Collection name={'MY COLLECTION'} />\r\n    },\r\n    \r\n];\r\n","import * as trendingConstants from '../constants/trendingConstants';\r\n\r\nconst initialState = {\r\n    listTrending: [],\r\n    totalPages: 1,\r\n    currentPage: 1,\r\n    error: ''\r\n};\r\n\r\nconst trendingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case trendingConstants.FECTH_TRENDING: {\r\n            return {\r\n                ...state,\r\n                listTrending: [],\r\n            }\r\n        }\r\n        case trendingConstants.FECTH_TRENDING_SUCCESS: {\r\n            const { results, total_pages } = action.payload.data;\r\n            return {\r\n                ...state,\r\n                listTrending: results,\r\n                totalPages: total_pages\r\n            };\r\n        }\r\n        case trendingConstants.FECTH_TRENDING_FAILED: {\r\n            const { error } = action.payload;\r\n            const errorMessage = error.toString();\r\n            return {\r\n                ...state,\r\n                error: errorMessage\r\n            };\r\n        }\r\n        case trendingConstants.SET_TRENDING_CURRENT_PAGE: {\r\n            const { number } = action.payload; \r\n            return {\r\n                ...state,\r\n                currentPage: number\r\n            };\r\n        }\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n}\r\nexport default trendingReducer;","import * as moviesConstants from '../constants/moviesConstants';\r\n\r\nconst initialState = {\r\n    listMovies: [],\r\n    totalPages: 1,\r\n    currentPage: 1,\r\n    listGenres: [],\r\n    listSelectedGenres: [],\r\n    genresID: [],\r\n    error: '',\r\n    fetchGenreError: ''\r\n}\r\n\r\nconst moivesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case moviesConstants.FETCH_MOVIES: {\r\n            return {\r\n                ...state,\r\n                listMovies: [],\r\n            }\r\n        }\r\n        case moviesConstants.FETCH_MOVIES_SUCCESS: {\r\n            const { results, total_pages } = action.payload.data; \r\n            return {\r\n                ...state,\r\n                listMovies: results,\r\n                totalPages: total_pages, \r\n            }\r\n        }\r\n        case moviesConstants.FETCH_MOVIES_FAILED: { \r\n            const { error } = action.payload;  \r\n            const errorMessage = error.toString();\r\n            return {\r\n                ...state,\r\n                error: errorMessage\r\n            }\r\n        }\r\n        case moviesConstants.SET_CURRENT_PAGE_MOVIES: {\r\n            const { number } = action.payload;\r\n            return {\r\n                ...state,\r\n                currentPage: number,\r\n            }\r\n        }\r\n        case moviesConstants.FETCH_MOVIES_GENRES: {\r\n            return {\r\n                ...state,\r\n                listGenres: [],\r\n            }\r\n        }\r\n        case moviesConstants.FETCH_MOVIES_GENRES_SUCCESS: {\r\n            const { genres } = action.payload.data; \r\n            return {\r\n                ...state,\r\n                listGenres: genres,\r\n            }\r\n        }\r\n        case moviesConstants.FETCH_MOVIES_GENRES_FAILED: {\r\n            const { error } = action.payload;\r\n            const errorMessage = error.toString();\r\n            return {\r\n                ...state,\r\n                fetchGenreError: errorMessage,\r\n            }\r\n        }\r\n\r\n        case moviesConstants.SET_MOVIES_SELECTED_GENRES: {\r\n            const { genres } = action.payload;  \r\n            let newSelectedGenres = null;\r\n            if (Array.isArray(genres)) {\r\n                newSelectedGenres = genres;\r\n            } else {\r\n                newSelectedGenres = state.listSelectedGenres.filter((g) => {\r\n                    return g.id !== genres.id;\r\n                });\r\n            }\r\n            console.log(newSelectedGenres);\r\n            return {\r\n                ...state,\r\n                listSelectedGenres: newSelectedGenres\r\n            }\r\n        }\r\n\r\n        case moviesConstants.SET_MOVIES_SELECTED_GENRES_ID: {\r\n            const { genres } = action.payload;\r\n            return {\r\n                ...state,\r\n                currentPage: 1,\r\n                genresID: genres,\r\n            }\r\n        }\r\n\r\n        case moviesConstants.UPDATE_MOVIES_GENRES: {\r\n            const { data } = action.payload;\r\n            let newGenres = null;\r\n            if (Array.isArray(data)) {\r\n                newGenres = data;\r\n            } else {\r\n                newGenres = state.listGenres.filter((g) => {\r\n                    return g.id !== data.id;\r\n                });\r\n            }\r\n            return {\r\n                ...state,\r\n                listGenres: newGenres,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default moivesReducer;\r\n","export const SHOW_LOADING = 'SHOW_LOADING';","import  * as uiConstants from '../constants/uiConstants';\r\n\r\n\r\nconst initialState = {\r\n    showLoading : false,\r\n}\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case uiConstants.SHOW_LOADING : {\r\n            const { value } = action.payload;\r\n           return {\r\n               ...state,\r\n               showLoading: value,\r\n           }\r\n        }   \r\n        default : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default uiReducer;","import * as tvSeriesTypes from '../constants/tvSeriesConstants';\r\n\r\nconst initialState = {\r\n    listTvSeries: [],\r\n    totalPages: 1,\r\n    currentPage: 1,\r\n    listGenres: [],\r\n    listSelectedGenres: [],\r\n    genresID: [],\r\n    fetchTvSeriesError: '',\r\n    fetchGenreError: ''\r\n};\r\n\r\nconst tvSeriesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case tvSeriesTypes.FETCH_TVSERIES: {\r\n            return {\r\n                ...state,\r\n                listTvSeries: [],\r\n            }\r\n        }\r\n        case tvSeriesTypes.FETCH_TVSERIES_SUCCESS: {\r\n            const { results, total_pages } = action.payload.data;\r\n            return {\r\n                ...state,\r\n                listTvSeries: results,\r\n                totalPages: total_pages\r\n            }\r\n        }\r\n        case tvSeriesTypes.FETCH_TVSERIES_FAILED: {\r\n            const { error } = action.payload;\r\n            const errorMessage = error.toString();\r\n            return {\r\n                ...state,\r\n                error: errorMessage\r\n            }\r\n        }\r\n        case tvSeriesTypes.SET_TVSERIES_CURRENT_PAGE: {\r\n            const { number } = action.payload;\r\n            return {\r\n                ...state,\r\n                currentPage: number,\r\n            }\r\n        }\r\n\r\n        case tvSeriesTypes.FETCH_TVSERIES_GENRES: {\r\n            return {\r\n                ...state,\r\n                listGenres: [],\r\n                // currentPage: 1, \r\n                // listSelectedGenres: [],\r\n                // genresID: [],\r\n            }\r\n        }\r\n        case tvSeriesTypes.FETCH_TVSERIES_GENRES_SUCCESS: {\r\n            const { genres } = action.payload.data;\r\n            return {\r\n                ...state,\r\n                listGenres: genres,\r\n            }\r\n        }\r\n        case tvSeriesTypes.FETCH_TVSERIES_GENRES_FAILED: {\r\n            const { error } = action.payload;\r\n            const errorMessage = error.toString();\r\n            return {\r\n                ...state,\r\n                fetchGenreError: errorMessage,\r\n            }\r\n        }\r\n\r\n        case tvSeriesTypes.SET_TVSERIES_SELECTED_GENRES: {\r\n            const { genres } = action.payload;\r\n            let newSelectedGenres = null;\r\n            if (Array.isArray(genres)) {\r\n                newSelectedGenres = genres;\r\n            } else {\r\n                newSelectedGenres = state.listSelectedGenres.filter((g) => {\r\n                    return g.id !== genres.id;\r\n                });\r\n            }\r\n            return {\r\n                ...state,\r\n                listSelectedGenres: newSelectedGenres\r\n            }\r\n        }\r\n\r\n        case tvSeriesTypes.SET_TVSERIES_SELECTED_GENRES_ID: {\r\n            const { genres } = action.payload;\r\n            return {\r\n                ...state,\r\n                currentPage: 1,\r\n                genresID: genres,\r\n            }\r\n        }\r\n\r\n        case tvSeriesTypes.UPDATE_TVSERIES_GENRES: {\r\n            const { data } = action.payload;\r\n            let newGenres = null;\r\n            if (Array.isArray(data)) {\r\n                newGenres = data;\r\n            } else {\r\n                newGenres = state.listGenres.filter((g) => {\r\n                    return g.id !== data.id;\r\n                });\r\n            }\r\n            return {\r\n                ...state,\r\n                listGenres: newGenres,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default tvSeriesReducer;","export const FETCH_GENRES = 'FETCH_GENRES';\r\nexport const FETCH_GENRES_SUCCESS = 'FETCH_GENRES_SUCCESS';\r\nexport const FETCH_GENRES_FAILED = 'FETCH_GENRES_FAILED';\r\n\r\nexport const SET_SELECTED_GENRES = 'SET_SELECTED_GENRES';\r\nexport const SET_SELECTED_GENRES_ID = 'SET_SELECTED_GENRES_ID';\r\n\r\nexport const UPDATE_GENRES = 'UPDATE_GENRES';\r\n","import * as genresConstants from '../constants/genresConstants';\r\n\r\nconst initialState = {\r\n    listGenres: [],\r\n    listSelectedGenres: [],\r\n    genresID: [],\r\n    fetchGenreError: ''\r\n}\r\n\r\nconst genresReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case genresConstants.FETCH_GENRES: {\r\n            return {\r\n                ...state,\r\n                listGenres: [],\r\n                listSelectedGenres: [],\r\n                genresID: [],\r\n                fetchGenreError: ''\r\n            }\r\n        }\r\n        case genresConstants.FETCH_GENRES_SUCCESS: {\r\n            console.log('listSelectedGenres ',state.listSelectedGenres);\r\n            const { genres } = action.payload.data;\r\n            return {\r\n                ...state,\r\n                listGenres: genres,\r\n                \r\n            }\r\n        }\r\n        case genresConstants.FETCH_GENRES_FAILED: {\r\n            const { error } = action.payload;\r\n            const errorMessage = error.toString();\r\n            return {\r\n                ...state,\r\n                fetchGenreError: errorMessage,\r\n            }\r\n        }\r\n\r\n        case genresConstants.SET_SELECTED_GENRES: {\r\n            const { genres } = action.payload;\r\n            let newSelectedGenres = null;\r\n            if (Array.isArray(genres)) {\r\n                newSelectedGenres = genres;\r\n            } else {\r\n                newSelectedGenres = state.listSelectedGenres.filter((g) => {\r\n                    return g.id !== genres.id;\r\n                });\r\n            }\r\n            return {\r\n                ...state,\r\n                listSelectedGenres: newSelectedGenres\r\n            }\r\n        }\r\n\r\n        case genresConstants.SET_SELECTED_GENRES_ID: {\r\n            const { id } = action.payload;\r\n            return {\r\n                ...state,\r\n                // currentPage: 1,\r\n                genresID: id,\r\n            }\r\n        }\r\n\r\n        case genresConstants.UPDATE_GENRES: {\r\n            const { genres } = action.payload;\r\n            let newGenres = null;\r\n            if (Array.isArray(genres)) {\r\n                newGenres = genres;\r\n            } else {\r\n                newGenres = state.listGenres.filter((g) => {\r\n                    return g.id !== genres.id;\r\n                });\r\n            }\r\n            return {\r\n                ...state,\r\n                listGenres: newGenres,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default genresReducer;\r\n","import * as searchConstants from '../constants/searchConstants';\r\nimport { MESSAGES } from '../constants';\r\nconst initialState = {\r\n    type: 0,\r\n    keyword: '',\r\n    listData: [],\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalResults: 0,\r\n    message:  MESSAGES.title,\r\n}\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case searchConstants.SET_KEYWORD:\r\n            const { txtSearch } = action.payload.keyword; \r\n            return {\r\n                ...state,\r\n                keyword: txtSearch, \r\n            }\r\n        case searchConstants.SET_TYPE:\r\n            const { type } = action.payload; \r\n            return {\r\n                ...state,\r\n                type, \r\n                currentPage: 1,\r\n            }\r\n        case searchConstants.FETCH_SEARCH:\r\n            return {\r\n                ...state\r\n            }\r\n        case searchConstants.FETCH_SEARCH_SUCCESS:\r\n            const { results, total_pages, total_results } = action.payload.data;\r\n            return {\r\n                ...state,\r\n                listData: results,\r\n                totalPages: total_pages,\r\n                totalResults: total_results,\r\n                message: results ? MESSAGES.null : null,\r\n            }\r\n        case searchConstants.FETCH_SEARCH_FAILED:\r\n            const { error } = action.payload;\r\n            const errorMessage = error.toString();\r\n            return {\r\n                ...state,\r\n                message: errorMessage,\r\n            }\r\n        case searchConstants.SET_CURRENT_PAGE_SEARCH: \r\n            const { page } = action.payload;\r\n            return {\r\n                ...state,\r\n                currentPage: page,\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default searchReducer;","import * as watchConstants from '../constants/watchConstants';\r\n\r\nconst initialState = {\r\n    infoData: null,\r\n    castData: [],\r\n    crewData: [],\r\n    infoMessage: '',\r\n    castMessage: '',\r\n}\r\n\r\nconst watchReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case watchConstants.FETCH_INFO:\r\n            return {\r\n                ...state,\r\n                infoData: null,\r\n            }\r\n        case watchConstants.FETCH_INFO_SUCCESS:\r\n            const { data } = action.payload;\r\n            return {\r\n                ...state,\r\n                infoData: data,\r\n            }\r\n        case watchConstants.FETCH_INFO_FAILED:\r\n            const { error: fectInfoError } = action.payload;\r\n            const infoErrorMessage = fectInfoError.toString();\r\n            return {\r\n                ...state,\r\n                infoMessage: infoErrorMessage,\r\n            }\r\n\r\n            case watchConstants.FETCH_CAST:\r\n            return {\r\n                ...state,\r\n                castData: [],\r\n                crewData: [],\r\n            }\r\n        case watchConstants.FETCH_CAST_SUCCESS:\r\n            const { cast, crew } = action.payload.data; \r\n            return {\r\n                ...state,\r\n                castData: cast,\r\n                crewData: crew,\r\n            }\r\n        case watchConstants.FETCH_CAST_FAILED:\r\n            const { error: fetchCastError  } = action.payload;\r\n            const castErrorMessage = fetchCastError.toString();\r\n            return {\r\n                ...state, \r\n                castMessage: castErrorMessage,\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\nexport default watchReducer;","import * as actorConstant from '../constants/actorConstants';\r\n\r\nconst initialState = {\r\n    actorInfo: null,\r\n    actorImage: [],\r\n}\r\n\r\nconst actorReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actorConstant.FETCH_ACTOR_INFO:\r\n            return {\r\n                ...state,\r\n                actorInfo: null,\r\n                actorImage: [],\r\n            }\r\n        case actorConstant.FETCH_ACTOR_INFO_SUCCESS:\r\n            const { data } = action.payload;\r\n            return {\r\n                ...state,\r\n                actorInfo: data,\r\n            }\r\n\r\n\r\n        default:\r\n            return {\r\n                ...state, \r\n            }\r\n    }\r\n}\r\n\r\nexport default actorReducer;","import * as collectionConstants from '../constants/collectionConstants';\r\n\r\nconst initialState = {\r\n    collectionData: [],\r\n}\r\n\r\nconst collectionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case collectionConstants.ADD_COLLECTION: {\r\n            const { data } = action.payload;\r\n            return {\r\n                ...state,\r\n                collectionData: data\r\n            }\r\n        }\r\n        case collectionConstants.DELETE_COLLECTION: {\r\n            const { id } = action.payload;\r\n            const newData = [...state.collectionData].filter(x => x.id !== id);\r\n            localStorage.setItem('collection', JSON.stringify(newData)); \r\n            return {\r\n                ...state,\r\n                collectionData: newData\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n}\r\nexport default collectionReducer;","import { combineReducers } from \"redux\";\r\nimport trendingReducer from \"./trendingReducer\";\r\nimport moviesReducer from \"./moviesReducer\";\r\nimport uiReducer from \"./uiReducer\";\r\nimport tvSeriesReducer from \"./tvSeriesReducer\";\r\nimport genresReducer from \"./genresReducer\";\r\nimport searchReducer from \"./searchReducer\";\r\nimport watchReducer from \"./watchReducer\";\r\nimport actorReducer from \"./actorReducer\";\r\nimport collectionReducer from \"./collectionReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    trending: trendingReducer,\r\n    movies: moviesReducer,\r\n    ui: uiReducer,\r\n    tvSeries: tvSeriesReducer,\r\n    genres: genresReducer,\r\n    search: searchReducer,\r\n    watch: watchReducer,\r\n    actor: actorReducer,\r\n    collections: collectionReducer,\r\n});\r\n\r\nexport default rootReducer;","import * as uiConstants from '../constants/uiConstants';\r\n\r\nexport const showLoading = (value) => {\r\n    return {\r\n        type : uiConstants.SHOW_LOADING,\r\n        payload : {\r\n            value,\r\n        }\r\n    }\r\n}","import axios from 'axios';\r\nclass AxiosService {\r\n    constructor() {\r\n        const instance = axios.create();\r\n        instance.interceptors.response.use(this.handleSuccess, this.handleError);\r\n        this.instance = instance;\r\n    }\r\n    handleSuccess(response) {\r\n        return response;\r\n    }\r\n    handleError(error) {\r\n        return Promise.reject(error);\r\n    }\r\n    get(url) {\r\n        return this.instance.get(url);\r\n    }\r\n}\r\nexport default new AxiosService();\r\n","import axiosServices from \"../commons/axiosServices\";\r\n \r\nexport const getGenres = (type) => { \r\n    const API_ENDPOINT = `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`;\r\n\r\n    return axiosServices.get(`${API_ENDPOINT}`);\r\n};\r\n","import axiosServices from \"../commons/axiosServices\";\r\nimport qs from 'query-string';\r\n\r\nconst API_ENDPOINT = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=false`;\r\n// &with_genres=${genreforURL}\r\nexport const getMovies = (params = {}) => {\r\n      let queryParams = '';  \r\n      if(Object.keys(params).length > 0) {\r\n          queryParams = `&${qs.stringify(params)}`;\r\n      } \r\n      return axiosServices.get(`${API_ENDPOINT}${queryParams}`);\r\n};\r\n","import axiosServices from '../commons/axiosServices';\r\nimport qs from 'query-string';\r\n\r\nexport const getSearchData = (type, params = {}) => {\r\n    const TypeString = type === 0 ? \"movie\" : \"tv\";\r\n    const API_ENDPOINT = `https://api.themoviedb.org/3/search/${TypeString}?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`;\r\n   \r\n    // &query=${searchText}&page=${page}\r\n    let queryParams = '';\r\n    if (Object.keys(params).length > 0) {\r\n        queryParams = `&${qs.stringify(params)}`;  \r\n    }\r\n    // console.log(`${API_ENDPOINT}${queryParams}&include_adult=false`);\r\n\r\n    return axiosServices.get(`${API_ENDPOINT}${queryParams}&include_adult=false`);\r\n};\r\n","import axiosServices from \"../commons/axiosServices\";\r\nimport qs from 'query-string';\r\n\r\nconst API_ENDPOINT = `https://api.themoviedb.org/3/trending/all/day?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`;\r\n\r\nexport const getTrending = (params = {}) => {\r\n      let queryParams = '';\r\n      if(Object.keys(params).length > 0) {\r\n          queryParams = `&${qs.stringify(params)}`;\r\n      } \r\n      return axiosServices.get(`${API_ENDPOINT}${queryParams}`);\r\n};\r\n","import qs from 'query-string';\r\nimport axiosServices from '../commons/axiosServices';\r\n\r\nconst API_ENDPOINT = `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false`;\r\n// &with_genres=${genreforURL}\r\n\r\nexport const getTvSeries = (params = {}) => {\r\n    let queryParams = '';\r\n    if(Object.keys(params).length > 0) {\r\n        queryParams = `&${qs.stringify(params)}`;\r\n    }\r\n    return axiosServices.get(`${API_ENDPOINT}${queryParams}`);\r\n};","import axiosServices from \"../commons/axiosServices\";\r\n\r\n\r\nexport const getActorInfo = async (actorID) => {\r\n    const API_ENDPOINT = `https://api.themoviedb.org/3/person/${actorID}?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`;\r\n\r\n    return await axiosServices.get(`${API_ENDPOINT}`);\r\n};\r\n  ","import axiosServices from \"../commons/axiosServices\";\r\n\r\n\r\nexport const getInfo = (mediaType, id) => {\r\n    \r\n    const API_ENDPOINT = `https://api.themoviedb.org/3/${mediaType}/${id}?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`;\r\n  \r\n    return axiosServices.get(`${API_ENDPOINT}`);\r\n}\r\n\r\nexport const getCast = (mediaType, id) => {\r\n    const API_ENDPOINT = `https://api.themoviedb.org/3/${mediaType}/${id}/credits?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`;\r\n \r\n    return axiosServices.get(`${API_ENDPOINT}`);\r\n}\r\n","import { call, delay, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport { fetchMovies, fetchMoviesFailed, fetchMoviesGenresFailed, fetchMoviesGenresSuccess, fetchMoviesSuccess } from '../actions/moviesActions';\r\nimport { fetchSearch, fetchSearchFailed, fetchSearchSuccess } from '../actions/searchActions';\r\nimport { fecthTrending, fecthTrendingFailed, fecthTrendingSuccess } from '../actions/trendingActions';\r\nimport { fetchTvSeries, fetchTvSeriesFailed, fetchTvSeriesGenresFailed, fetchTvSeriesGenresSuccess, fetchTvSeriesSuccess } from '../actions/tvSeriesActions';\r\nimport { showLoading } from '../actions/uiActions';\r\nimport { fetchCastFailed, fetchCastSuccess, fetchInfoFailed, fetchInfoSuccess } from '../actions/watchActions';\r\nimport { getGenres } from '../apis/genresApi';\r\nimport { getMovies } from '../apis/moviesAPI';\r\nimport { getSearchData } from '../apis/searchApi';\r\nimport { getTrending } from '../apis/trendingAPI';\r\nimport { getTvSeries } from '../apis/tvSeriesApi';\r\nimport { getActorInfo } from '../apis/actorApi';\r\nimport { getCast, getInfo } from '../apis/watchApi';\r\nimport * as moviesConstants from '../constants/moviesConstants';\r\nimport * as searchConstants from '../constants/searchConstants';\r\nimport * as trendingConstants from '../constants/trendingConstants';\r\nimport * as tvSeriesConstants from '../constants/tvSeriesConstants';\r\nimport * as watchConstants from '../constants/watchConstants';\r\nimport * as actorConstants from '../constants/actorConstants';\r\nimport { fetchActorInfoFailed, fetchActorInfoSuccess } from '../actions/actorActions';\r\n\r\n// GET TRENDING DATA\r\nfunction* fetchTrendingSaga({ payload }) {\r\n    const { params } = payload;\r\n    yield put(showLoading(true));\r\n    yield delay(500);\r\n    try {\r\n        const resp = yield call(getTrending, params);\r\n        yield put(fecthTrendingSuccess(resp.data));\r\n    } catch (error) {\r\n        yield put(fecthTrendingFailed(error));\r\n    }\r\n    yield put(showLoading(false));\r\n}\r\nfunction* setCurrentPageTrendingSaga({ payload }) {\r\n    const { number } = payload;\r\n    yield put(fecthTrending({\r\n        page: number,\r\n    }),\r\n    );\r\n}\r\n\r\n// GET MOVIES DATA\r\nfunction* fetchMoviesSaga({ payload }) {\r\n    const { params } = payload;\r\n    yield put(showLoading(true));\r\n    yield delay(500);\r\n    try {\r\n        const resp = yield call(getMovies, params);\r\n        yield put(fetchMoviesSuccess(resp.data));\r\n    } catch (error) {\r\n        yield put(fetchMoviesFailed(error));\r\n    }\r\n    yield put(showLoading(false));\r\n\r\n}\r\nfunction* setCurrentPageMoviesSaga({ payload }) {\r\n    const { number: page } = payload;\r\n    const genres = yield select(state => state.movies.genresID);\r\n    yield put(fetchMovies({\r\n        with_genres: genres,\r\n        page\r\n    }),\r\n    );\r\n}\r\nfunction* fetchMoviesGenresSaga({ payload }) {\r\n    const { type } = payload;\r\n    yield delay(500);\r\n    try {\r\n        const resp = yield call(getGenres, type);\r\n        yield put(fetchMoviesGenresSuccess(resp.data))\r\n    } catch (error) {\r\n        yield put(fetchMoviesGenresFailed(error));\r\n    }\r\n}\r\nfunction* setMoviesSelectedGenresIDSaga({ payload }) {\r\n    const { genres } = payload;\r\n    const page = yield select(state => state.movies.currentPage);\r\n    yield put(fetchMovies({\r\n        with_genres: genres,\r\n        page,\r\n    }),\r\n    );\r\n}\r\n// GET GENRES DATA\r\n// function* fetchGenresSaga({ payload }) {\r\n//     const { type } = payload;\r\n//     yield delay(500);\r\n//     try {\r\n//         const resp = yield call(getGenres, type);\r\n//         yield put(fetchGenresSuccess(resp.data))\r\n//     } catch (error) {\r\n//         yield put(fetchGenresFailed(error));\r\n//     }\r\n// }\r\n// function* setSelectedGenresIDSaga({ payload }) {\r\n//     const { id, type } = payload; \r\n//     if (type === 'tv') {\r\n//         const page = yield select(state => state.tvSeries.currentPage);\r\n//         yield put(fetchTvSeries({\r\n//                 with_genres: id,\r\n//                 page,\r\n//             }),\r\n//         );\r\n//     } else if(type === 'movie'){\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// GET TVSERIES DATA\r\n\r\nfunction* fetchTvSeriesSaga({ payload }) {\r\n    const { params } = payload;\r\n    yield put(showLoading(true));\r\n    yield delay(500);\r\n    try {\r\n        const resp = yield call(getTvSeries, params);\r\n        yield put(fetchTvSeriesSuccess(resp.data));\r\n    } catch (error) {\r\n        yield put(fetchTvSeriesFailed(error));\r\n    }\r\n    yield put(showLoading(false));\r\n}\r\n\r\nfunction* setTvSeriesCurrentPage({ payload }) {\r\n    const { number } = payload;\r\n    const genresID = yield select(state => state.tvSeries.genresID);\r\n    yield put(fetchTvSeries({\r\n        with_genres: genresID,\r\n        page: number,\r\n    }))\r\n}\r\n\r\nfunction* fetchTvSeriesGenresSaga({ payload }) {\r\n    const { type } = payload;\r\n    yield delay(500);\r\n    try {\r\n        const resp = yield call(getGenres, type);\r\n        yield put(fetchTvSeriesGenresSuccess(resp.data))\r\n    } catch (error) {\r\n        yield put(fetchTvSeriesGenresFailed(error));\r\n    }\r\n}\r\n\r\nfunction* setTvSeriesSelectedGenresIDSaga({ payload }) {\r\n    const { genres } = payload;\r\n    const page = yield select(state => state.tvSeries.currentPage);\r\n    yield put(fetchTvSeries({\r\n        with_genres: genres,\r\n        page,\r\n    }),\r\n    );\r\n}\r\n// GET SEARCH DATA\r\nfunction* fetchSearchSaga({ payload }) {\r\n    const { type, params } = payload;\r\n    const { keyword, page } = params;\r\n    let param = {\r\n        query: keyword,\r\n    };\r\n    if (page) {\r\n        param = {\r\n            query: keyword,\r\n            page\r\n        };\r\n    }\r\n    yield put(showLoading(true));\r\n    yield delay(500);\r\n    try {\r\n        const resp = yield call(getSearchData, type, param);\r\n        yield put(fetchSearchSuccess(resp.data));\r\n        console.log(resp);\r\n    } catch (error) {\r\n        yield put(fetchSearchFailed(error));\r\n    }\r\n    yield put(showLoading(false));\r\n}\r\nfunction* setCurrentPageSearchSaga({ payload }) {\r\n    const { page } = payload;\r\n    const keyword = yield select(state => state.search.keyword);\r\n    const type = yield select(state => state.search.type);\r\n    const params = {\r\n        keyword,\r\n        page,\r\n    }\r\n    yield put(fetchSearch(type, params));\r\n}\r\n\r\n// GET INFO MOVIE\r\nfunction* fetchInfoMovieSaga({ payload }) {\r\n    const { id, mediaType } = payload; \r\n    if (id && mediaType !== null) {\r\n\r\n        yield put(showLoading(true));\r\n        yield delay(500);\r\n        try {\r\n            const resp = yield call(getInfo, mediaType, id);\r\n            yield put(fetchInfoSuccess(resp.data));\r\n        } catch (error) {\r\n            yield put(fetchInfoFailed(error));\r\n        }\r\n        yield put(showLoading(false));\r\n    }\r\n   \r\n}\r\n\r\nfunction* fetchCastMovieSaga({ payload }) {\r\n    const { id, mediaType } = payload;\r\n    // yield put(showLoading(true));\r\n    yield delay(500);\r\n    try {\r\n        const resp = yield call(getCast, mediaType, id);\r\n        yield put(fetchCastSuccess(resp.data));\r\n    } catch (error) {\r\n        yield put(fetchCastFailed(error));\r\n    }\r\n    // yield put(showLoading(false));  \r\n}\r\n\r\nfunction* fetchActorInfoSaga({ payload }) {\r\n    const { id } = payload;\r\n    yield put(showLoading(true));\r\n    try {\r\n        const respActor = yield call(getActorInfo, id);\r\n        yield put(fetchActorInfoSuccess(respActor.data));\r\n    } catch (error) {\r\n        yield put(fetchActorInfoFailed(error));\r\n    }\r\n    yield put(showLoading(false));\r\n\r\n}\r\n\r\nfunction* rootSaga() {\r\n    // GET TRENDING DATA\r\n    yield takeEvery(trendingConstants.FECTH_TRENDING, fetchTrendingSaga);\r\n    yield takeLatest(trendingConstants.SET_TRENDING_CURRENT_PAGE, setCurrentPageTrendingSaga);\r\n    // GET MOVIES DATA\r\n    yield takeEvery(moviesConstants.FETCH_MOVIES, fetchMoviesSaga);\r\n    yield takeEvery(moviesConstants.FETCH_MOVIES_GENRES, fetchMoviesGenresSaga);\r\n    yield takeLatest(moviesConstants.SET_MOVIES_SELECTED_GENRES_ID, setMoviesSelectedGenresIDSaga);\r\n    yield takeLatest(moviesConstants.SET_CURRENT_PAGE_MOVIES, setCurrentPageMoviesSaga);\r\n    // GET GENRES DATA\r\n    // yield takeEvery(genresConstants.FETCH_GENRES, fetchGenresSaga);\r\n    // yield takeEvery(genresConstants.SET_SELECTED_GENRES_ID, setSelectedGenresIDSaga);\r\n\r\n    // GET TVSERIES DATA\r\n    yield takeEvery(tvSeriesConstants.FETCH_TVSERIES, fetchTvSeriesSaga);\r\n    yield takeLatest(tvSeriesConstants.SET_TVSERIES_CURRENT_PAGE, setTvSeriesCurrentPage);\r\n    yield takeEvery(tvSeriesConstants.FETCH_TVSERIES_GENRES, fetchTvSeriesGenresSaga);\r\n    yield takeLatest(tvSeriesConstants.SET_TVSERIES_SELECTED_GENRES_ID, setTvSeriesSelectedGenresIDSaga);\r\n\r\n    // GET SEACH DATA\r\n    yield takeEvery(searchConstants.FETCH_SEARCH, fetchSearchSaga);\r\n    yield takeLatest(searchConstants.SET_CURRENT_PAGE_SEARCH, setCurrentPageSearchSaga);\r\n\r\n    // GET INFO MOVIE\r\n    yield takeLatest(watchConstants.FETCH_INFO, fetchInfoMovieSaga);\r\n    yield takeLatest(watchConstants.FETCH_CAST, fetchCastMovieSaga);\r\n    // GET ACTOR INFO\r\n    yield takeEvery(actorConstants.FETCH_ACTOR_INFO, fetchActorInfoSaga);\r\n\r\n}\r\n\r\nexport default rootSaga;","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from '../reducers';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../saga\";\r\n\r\nconst composeEnhancers = process.env.NODE_ENV !== 'production' &&\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        shouldHotReload: false\r\n    }) : compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancers = [\r\n        applyMiddleware(...middlewares)\r\n    ]; \r\n    const store = createStore(rootReducer, composeEnhancers(...enhancers));\r\n    sagaMiddleware.run(rootSaga);\r\n    return store; \r\n};\r\nexport default configureStore;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoadingContainer = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;  \r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 999;  \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Loading = styled.div`\r\n    background-color: rgba(17, 17, 44, 0.9);\r\n    border-radius: 50%;\r\n    box-shadow: 5px 5px 5px rgba(17, 17, 44, 0.8);\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingImg = styled.img`\r\n    width: 50px;\r\n    height: 50px; \r\n    padding: 1px;\r\n`;","export default __webpack_public_path__ + \"static/media/loading.9c895195.svg\";","import './GlobalLoading.styles';\r\nimport { Loading, LoadingContainer, LoadingImg } from './GlobalLoading.styles';\r\nimport loadingImg from '../../assets/images/loading.svg'\r\nimport { useSelector } from 'react-redux';\r\nconst GlobalLoading = () => {\r\n\r\n    const showLoading = useSelector(state => state.ui.showLoading);\r\n    if(showLoading === true) \r\n    return (\r\n        <LoadingContainer>\r\n            <Loading>\r\n                <LoadingImg src={loadingImg} alt='' />\r\n            </Loading>\r\n        </LoadingContainer>\r\n    )\r\n    return null;\r\n}\r\n\r\nexport default GlobalLoading\r\n","import styled from \"styled-components\";\r\n// import bgFooter from '../../assets/images/bgFooter.png';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const FooterContainer = styled.div`\r\n    max-width: 100vw;  \r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    position: relative;  \r\n    background-color: rgba(11,11,30, .9);\r\n        background: linear-gradient(5deg,#0a0a19 45%,rgba(15,15,40,.8) 75%,rgba(15,15,40,0.5));\r\n    /* &::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%; \r\n        \r\n    } */\r\n`;\r\nexport const TextWrapper = styled.ul`\r\n    color: #8c8c8c;  \r\n    padding: 40px 0;\r\n\r\n`; \r\nexport const TextItem = styled.li`\r\n     list-style: none;\r\n     display: flex;\r\n     flex-direction: column;\r\n`;\r\nexport const TextTitle = styled.p` \r\n    font-size: 1.2rem;\r\n    color: #FEB50B; \r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n`;\r\nexport const TextLink = styled(Link)`\r\n    color: #C4C6A5;\r\n    text-decoration: none;\r\n    margin: 5px 0;\r\n`;","\r\nimport { Container, Grid } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { FooterContainer, TextItem, TextLink, TextTitle, TextWrapper } from './Footer.styles'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterContainer>\r\n            <Container>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextWrapper>\r\n                            <TextItem>\r\n                                <TextTitle>About US</TextTitle>\r\n                                <TextLink to='/' >\r\n                                    Updating...\r\n                                </TextLink>\r\n                                <TextLink to='/' >\r\n                                    Updating...\r\n                                </TextLink>\r\n                                <TextLink to='/' >\r\n                                    Updating...\r\n                                </TextLink>\r\n                            </TextItem>\r\n                        </TextWrapper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextWrapper>\r\n                            <TextItem>\r\n                                <TextTitle>Contact US</TextTitle>\r\n                                <TextLink to='/' >\r\n                                    Facebook: updating...\r\n                                </TextLink>\r\n                                <TextLink to='/' >\r\n                                    Youtube: updating...\r\n                                </TextLink>\r\n                                <TextLink to='/' >\r\n                                    Twitter: updating...\r\n                                </TextLink>\r\n                            </TextItem>\r\n                        </TextWrapper>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12}>\r\n                        <TextWrapper>\r\n                            <TextItem>\r\n                                <TextLink to='' >\r\n                                    @2021 VCTFilms\r\n                                </TextLink>\r\n                            </TextItem>\r\n                        </TextWrapper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </FooterContainer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","\nimport Header from './components/Header/Header';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Container } from '@material-ui/core';\nimport { ROUTES } from './routes';\nimport { AppContainer } from './globalStyles';\nimport GlobalStyle from \"./globalStyles\";\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport GlobalLoading from './components/GlobalLoading/GlobalLoading';\nimport Footer from './components/Footer/Footer';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\n// import './transition.css';\n\nconst store = configureStore();\n\nfunction App() {\n\n  const renderRoutes = () => {\n    let xhtml = null;\n    if (ROUTES) {\n      xhtml = ROUTES.map(route => {\n        return (\n          <Route\n            key={route.id}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        );\n      });\n    }\n    return xhtml;\n  }\n\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <GlobalStyle />\n        <Header />\n        <AppContainer>\n          <Container>\n            {/* <Route render={({ location }) => (\n              <TransitionGroup>\n                <CSSTransition\n                  key={location.key}\n                  timeout={450}\n                  classNames=\"fade\"\n                > */}\n                  <Switch>\n                    {renderRoutes()}\n                  </Switch>\n                {/* </CSSTransition>\n              </TransitionGroup>\n            )} /> */}\n          </Container>\n        </AppContainer>\n        <Footer />\n        <GlobalLoading />\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';  \n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}